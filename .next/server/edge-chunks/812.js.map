{"version":3,"file":"edge-chunks/812.js","mappings":"kIAEA,SAAAA,EAAAC,CAAA,CAAAC,CAAA,EACA,sBAAAD,EACA,OAAAA,EAAAC,SACID,GACJA,CAAAA,EAAAE,OAAA,CAAAD,CAAA,CAEA,CACA,SAAAE,EAAA,GAAAC,CAAA,EACA,WACA,IAAAC,EAAA,GACAC,EAAAF,EAAAG,GAAA,KACA,IAAAC,EAAAT,EAAAC,EAAAS,GAIA,OAHAJ,GAAA,mBAAAG,GACAH,CAAAA,EAAA,IAEAG,CACA,GACA,GAAAH,EACA,WACA,QAAAK,EAAA,EAAwBA,EAAAJ,EAAAK,MAAA,CAAqBD,IAAA,CAC7C,IAAAF,EAAAF,CAAA,CAAAI,EAAA,CACA,mBAAAF,EACAA,IAEAT,EAAAK,CAAA,CAAAM,EAAA,MAEA,CACA,CAEA,CACA,CACA,SAAAE,EAAA,GAAAR,CAAA,EACA,OAASS,EAAAC,WAAiB,CAAAX,KAAAC,GAAAA,EAC1B,wFC9BA,SAAAW,EAAAC,CAAA,EACA,IAAAC,EAAAC,SAwBAF,CAAA,EACA,IAAAC,EAAoBJ,EAAAM,UAAgB,EAAAC,EAAAC,KACpC,IAAYC,SAAAA,CAAA,IAAAC,EAAA,CAAyBH,EACrC,GAAQP,EAAAW,cAAoB,CAAAF,GAAA,KAoD5BG,EACAC,EApDA,IAAAC,EAqDA,CAFAF,EAAAG,OAAAC,wBAAA,CAAAC,EAAAV,KAAA,SAAAW,MACA,mBAAAN,GAAAA,EAAAO,cAAA,CAEAF,EAAA9B,GAAA,CAGAyB,CADAA,EAAAG,OAAAC,wBAAA,CAxDAP,EAwDA,QAAAS,GAAA,GACA,mBAAAN,GAAAA,EAAAO,cAAA,CAEAF,EAAAV,KAAA,CAAApB,GAAA,CAEA8B,EAAAV,KAAA,CAAApB,GAAA,EAAA8B,EAAA9B,GAAA,CA5DAiC,EAAAC,SAyBAX,CAAA,CAAAY,CAAA,EACA,IAAAC,EAAA,CAA0B,GAAAD,CAAA,EAC1B,QAAAE,KAAAF,EAAA,CACA,IAAAG,EAAAf,CAAA,CAAAc,EAAA,CACAE,EAAAJ,CAAA,CAAAE,EAAA,CACA,WAAAG,IAAA,CAAAH,GAEAC,GAAAC,EACAH,CAAA,CAAAC,EAAA,KAAAI,KACA,IAAAC,EAAAH,KAAAE,GAEA,OADAH,KAAAG,GACAC,CACA,EACQJ,GACRF,CAAAA,CAAA,CAAAC,EAAA,CAAAC,CAAA,EAEMD,UAAAA,EACND,CAAA,CAAAC,EAAA,EAAkC,GAAAC,CAAA,IAAAC,CAAA,EAC5B,cAAAF,GACND,CAAAA,CAAA,CAAAC,EAAA,EAAAC,EAAAC,EAAA,CAAAI,MAAA,CAAAC,SAAAC,IAAA,MAEA,CACA,OAAW,GAAAtB,CAAA,IAAAa,CAAA,CACX,EAhDAb,EAAAD,EAAAF,KAAA,EAIA,OAHAE,EAAAwB,IAAA,GAA4BjC,EAAAkC,QAAc,EAC1Cd,CAAAA,EAAAjC,GAAA,CAAAqB,EAAoC,GAAA2B,EAAAC,CAAA,EAAW5B,EAAAM,GAAAA,CAAA,EAElCd,EAAAqC,YAAkB,CAAA5B,EAAAW,EAC/B,CACA,OAAWpB,EAAAsC,QAAc,CAAAC,KAAA,CAAA9B,GAAA,EAAuBT,EAAAsC,QAAc,CAAAE,IAAA,WAC9D,GAEA,OADApC,EAAAqC,WAAA,IAA6BtC,EAAU,YACvCC,CACA,EAvCAD,GACAuC,EAAgB1C,EAAAM,UAAgB,EAAAC,EAAAC,KAChC,IAAYC,SAAAA,CAAA,IAAAC,EAAA,CAAyBH,EACrCoC,EAA0B3C,EAAAsC,QAAc,CAAAM,OAAA,CAAAnC,GACxCoC,EAAAF,EAAAG,IAAA,CAAAC,GACA,GAAAF,EAAA,CACA,IAAAG,EAAAH,EAAAtC,KAAA,CAAAE,QAAA,CACAwC,EAAAN,EAAAjD,GAAA,IACA,IAAAmD,EAIAK,EAHA,EAAcZ,QAAc,CAAAC,KAAA,CAAAS,GAAA,EAA+BhD,EAAAsC,QAAc,CAAAE,IAAA,OACxDxC,EAAAW,cAAoB,CAAAqC,GAAAA,EAAAzC,KAAA,CAAAE,QAAA,OAKrC,MAA6B,GAAA0C,EAAAC,GAAA,EAAGhD,EAAA,CAAc,GAAAM,CAAA,CAAAvB,IAAAqB,EAAAC,SAA2CT,EAAAW,cAAoB,CAAAqC,GAAehD,EAAAqC,YAAkB,CAAAW,EAAA,OAAAC,GAAA,MAC9I,CACA,MAA2B,GAAAE,EAAAC,GAAA,EAAGhD,EAAA,CAAc,GAAAM,CAAA,CAAAvB,IAAAqB,EAAAC,SAAAA,CAAA,EAC5C,GAEA,OADAiC,EAAAD,WAAA,IAAyBtC,EAAU,OACnCuC,CACA,CACA,IAAAW,EAAAnD,EAAA,QAkBAoD,EAAAC,OAAA,mBAEA,SAAAC,EAAArD,CAAA,EACA,IAAAsD,EAAA,EAAwBhD,SAAAA,CAAA,CAAU,GACP,GAAA0C,EAAAC,GAAA,EAAID,EAAAjB,QAAS,EAAIzB,SAAAA,CAAA,GAI5C,OAFAgD,EAAAhB,WAAA,IAA8BtC,EAAU,YACxCsD,EAAAC,SAAA,CAAAJ,EACAG,CACA,CAEA,SAAAV,EAAAG,CAAA,EACA,OAASlD,EAAAW,cAAoB,CAAAuC,IAAA,mBAAAA,EAAAjB,IAAA,gBAAAiB,EAAAjB,IAAA,EAAAiB,EAAAjB,IAAA,CAAAyB,SAAA,GAAAJ,CAC7B,mCC3DwP,SAAAK,IAAgB,QAAAC,EAAAC,EAAAC,EAAA,EAAAC,EAAA,GAAAC,EAAAC,UAAAnE,MAAA,CAAwCgE,EAAAE,EAAIF,IAAA,CAAAF,EAAAK,SAAA,CAAAH,EAAA,GAAAD,CAAAA,EAAAK,SAApTA,EAAAN,CAAA,EAAc,IAAAC,EAAAC,EAAAC,EAAA,GAAa,oBAAAH,GAAA,iBAAAA,EAAAG,GAAAH,OAA+C,oBAAAA,GAAA,GAAAO,MAAAC,OAAA,CAAAR,GAAA,CAAgD,IAAAI,EAAAJ,EAAA9D,MAAA,CAAe,IAAA+D,EAAA,EAAQA,EAAAG,EAAIH,IAAAD,CAAA,CAAAC,EAAA,EAAAC,CAAAA,EAAAI,EAAAN,CAAA,CAAAC,EAAA,IAAAE,CAAAA,GAAAA,CAAAA,GAAA,KAAAA,GAAAD,CAAAA,CAAA,MAA0C,IAAAA,KAAAF,EAAAA,CAAA,CAAAE,EAAA,EAAAC,CAAAA,GAAAA,CAAAA,GAAA,KAAAA,GAAAD,CAAAA,EAAyC,OAAAC,CAAA,EAA4EH,EAAA,GAAAG,CAAAA,GAAAA,CAAAA,GAAA,KAAAA,GAAAF,CAAAA,EAAmD,OAAAE,CAAA,qCCCvW,IAAAM,EAAAC,IACA,IAAAC,EAAAC,EAAAF,GACA,CACAG,uBAAAA,CAAA,CACAC,+BAAAA,CAAA,CACA,CAAIJ,EAgBJ,OACAK,gBAhBAC,IACA,IAAAC,EAAAD,EAAAE,KAAA,CARA,KAaA,MAHA,KAAAD,CAAA,KAAAA,IAAAA,EAAA/E,MAAA,EACA+E,EAAAE,KAAA,GAEAC,EAAAH,EAAAN,IAAAU,EAAAL,EACA,EAUAM,4BATA,CAAAC,EAAAC,KACA,IAAAC,EAAAZ,CAAA,CAAAU,EAAA,YACA,GAAAT,CAAA,CAAAS,EAAA,CACA,IAAAE,KAAAX,CAAA,CAAAS,EAAA,EAEAE,CACA,CAIA,CACA,EACAL,EAAA,CAAAH,EAAAS,KACA,GAAAT,IAAAA,EAAA/E,MAAA,CACA,OAAAwF,EAAAH,YAAA,CAEA,IAAAI,EAAAV,CAAA,IACAW,EAAAF,EAAAG,QAAA,CAAAvE,GAAA,CAAAqE,GACAG,EAAAF,EAAAR,EAAAH,EAAAc,KAAA,IAAAH,GAAAI,KAAAA,EACA,GAAAF,EACA,OAAAA,EAEA,GAAAJ,IAAAA,EAAAO,UAAA,CAAA/F,MAAA,CACA,OAEA,IAAAgG,EAAAjB,EAAA7C,IAAA,CAxCA,KAyCA,OAAAsD,EAAAO,UAAA,CAAA/C,IAAA,GACAiD,UAAAA,CAAA,CACG,GAAAA,EAAAD,KAAAX,YACH,EACAa,EAAA,aACAf,EAAAL,IACA,GAAAoB,EAAArE,IAAA,CAAAiD,GAAA,CACA,IAAAqB,EAAAD,EAAAE,IAAA,CAAAtB,EAAA,IACAuB,EAAAF,GAAAG,UAAA,EAAAH,EAAAI,OAAA,OACA,GAAAF,EAEA,oBAAAA,CAEA,CACA,EAIA3B,EAAAF,IACA,IACAgC,MAAAA,CAAA,CACAC,YAAAA,CAAA,CACA,CAAIjC,EACJC,EAAA,CACAkB,SAAA,IAAAe,IACAX,WAAA,IAEA,QAAAV,KAAAoB,EACAE,EAAAF,CAAA,CAAApB,EAAA,CAAAZ,EAAAY,EAAAmB,GAEA,OAAA/B,CACA,EACAkC,EAAA,CAAAC,EAAApB,EAAAH,EAAAmB,KACAI,EAAAC,OAAA,CAAAC,IACA,oBAAAA,EAAA,CAEAC,CADAD,KAAAA,EAAAtB,EAAAwB,EAAAxB,EAAAsB,EAAA,EACAzB,YAAA,CAAAA,EACA,MACA,CACA,sBAAAyB,EAAA,CACA,GAAAG,EAAAH,GAAA,CACAH,EAAAG,EAAAN,GAAAhB,EAAAH,EAAAmB,GACA,MACA,CACAhB,EAAAO,UAAA,CAAAmB,IAAA,EACAjB,UAAAa,EACAzB,aAAAA,CACA,GACA,MACA,CACApE,OAAAkG,OAAA,CAAAL,GAAAD,OAAA,GAAAO,EAAAR,EAAA,IACAD,EAAAC,EAAAI,EAAAxB,EAAA4B,GAAA/B,EAAAmB,EACA,EACA,EACA,EACAQ,EAAA,CAAAxB,EAAA6B,KACA,IAAAC,EAAA9B,EAUA,OATA6B,EAAArC,KAAA,CAlGA,KAkGA6B,OAAA,CAAAU,IACAD,EAAA3B,QAAA,CAAA6B,GAAA,CAAAD,IACAD,EAAA3B,QAAA,CAAA8B,GAAA,CAAAF,EAAA,CACA5B,SAAA,IAAAe,IACAX,WAAA,KAGAuB,EAAAA,EAAA3B,QAAA,CAAAvE,GAAA,CAAAmG,EACA,GACAD,CACA,EACAL,EAAAS,GAAAA,EAAAT,aAAA,CAGAU,EAAAC,IACA,GAAAA,EAAA,EACA,OACAxG,IAAA,IAAA0E,KAAAA,EACA2B,IAAA,MACA,EAEA,IAAAI,EAAA,EACAC,EAAA,IAAApB,IACAqB,EAAA,IAAArB,IACAsB,EAAA,CAAAZ,EAAA9H,KACAwI,EAAAL,GAAA,CAAAL,EAAA9H,KAEAuI,EAAAD,IACAC,EAAA,EACAE,EAAAD,EACAA,EAAA,IAAApB,IAEA,EACA,OACAtF,IAAAgG,CAAA,EACA,IAAA9H,EAAAwI,EAAA1G,GAAA,CAAAgG,UACA,KAAAtB,IAAAxG,EACAA,EAEA,KAAAwG,IAAAxG,CAAAA,EAAAyI,EAAA3G,GAAA,CAAAgG,EAAA,GACAY,EAAAZ,EAAA9H,GACAA,SAEA,EACAmI,IAAAL,CAAA,CAAA9H,CAAA,EACAwI,EAAAN,GAAA,CAAAJ,GACAU,EAAAL,GAAA,CAAAL,EAAA9H,GAEA0I,EAAAZ,EAAA9H,EAEA,CACA,CACA,EAIA2I,EAAAzD,IACA,IACA0D,OAAAA,CAAA,CACAC,2BAAAA,CAAA,CACA,CAAI3D,EAOJ4D,EAAAtD,QAKAuD,EAJA,IAAAC,EAAA,GACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA,QAAAC,EAAA,EAAwBA,EAAA5D,EAAA9E,MAAA,CAA0B0I,IAAA,CAClD,IAAAC,EAAA7D,CAAA,CAAA4D,EAAA,CACA,GAAAH,IAAAA,GAAAC,IAAAA,EAAA,CACA,GAAAG,MAAAA,EAAA,CACAL,EAAApB,IAAA,CAAApC,EAAAe,KAAA,CAAA4C,EAAAC,IACAD,EAAAC,EAxBA,EAyBA,QACA,CACA,GAAAC,MAAAA,EAAA,CACAN,EAAAK,EACA,QACA,CACA,CACAC,MAAAA,EACAJ,IACQI,MAAAA,EACRJ,IACQI,MAAAA,EACRH,IACQ,MAAAG,GACRH,GAEA,CACA,IAAAI,EAAAN,IAAAA,EAAAtI,MAAA,CAAA8E,EAAAA,EAAAwB,SAAA,CAAAmC,GACAI,EAAAC,EAAAF,GAGA,OACAN,UAAAA,EACAS,qBAJAF,IAAAD,EAKAC,cAAAA,EACAG,6BALAX,GAAAA,EAAAI,EAAAJ,EAAAI,EAAA3C,KAAAA,CAMA,CACA,EACA,GAAAoC,EAAA,CACA,IAAAe,EAAAf,EAtDA,IAuDAgB,EAAAd,EACAA,EAAAtD,GAAAA,EAAAqE,UAAA,CAAAF,GAAAC,EAAApE,EAAAwB,SAAA,CAAA2C,EAAAjJ,MAAA,IACAoJ,WAAA,GACAd,UAAA,GACAS,qBAAA,GACAF,cAAA/D,EACAkE,6BAAAlD,KAAAA,CACA,CACA,CACA,GAAAqC,EAAA,CACA,IAAAe,EAAAd,EACAA,EAAAtD,GAAAqD,EAAA,CACArD,UAAAA,EACAsD,eAAAc,CACA,EACA,CACA,OAAAd,CACA,EACAU,EAAAD,GACA,EAAAQ,QAAA,CA3EA,KA4EAR,EAAAvC,SAAA,GAAAuC,EAAA7I,MAAA,IAMA6I,EAAAM,UAAA,CAlFA,KAmFAN,EAAAvC,SAAA,IAEAuC,EAQAS,EAAA9E,IACA,IAAA+E,EAAAtI,OAAAuI,WAAA,CAAAhF,EAAA+E,uBAAA,CAAA3J,GAAA,CAAA6J,GAAA,CAAAA,EAAA,MAmBA,OAlBAnB,IACA,GAAAA,EAAAtI,MAAA,IACA,OAAAsI,EAEA,IAAAoB,EAAA,GACAC,EAAA,GAWA,OAVArB,EAAAzB,OAAA,CAAA4C,IACAA,MAAAA,CAAA,KAAAF,CAAA,CAAAE,EAAA,EAEAC,EAAAxC,IAAA,IAAAyC,EAAAC,IAAA,GAAAH,GACAE,EAAA,IAEAA,EAAAzC,IAAA,CAAAuC,EAEA,GACAC,EAAAxC,IAAA,IAAAyC,EAAAC,IAAA,IACAF,CACA,CAEA,EACAG,EAAArF,GAAA,EACAsD,MAAAH,EAAAnD,EAAAqD,SAAA,EACAO,eAAAH,EAAAzD,GACAsF,cAAAR,EAAA9E,GACA,GAAAD,EAAAC,EAAA,CACA,EACAuF,EAAA,MACAC,EAAA,CAAAC,EAAAC,KACA,IACA9B,eAAAA,CAAA,CACAvD,gBAAAA,CAAA,CACAO,4BAAAA,CAAA,CACA0E,cAAAA,CAAA,CACA,CAAII,EAQJC,EAAA,GACAC,EAAAH,EAAAI,IAAA,GAAArF,KAAA,CAAA+E,GACAhI,EAAA,GACA,QAAA2G,EAAA0B,EAAApK,MAAA,GAA0C0I,GAAA,EAAYA,GAAA,GACtD,IAAA4B,EAAAF,CAAA,CAAA1B,EAAA,CACA,CACAU,WAAAA,CAAA,CACAd,UAAAA,CAAA,CACAS,qBAAAA,CAAA,CACAF,cAAAA,CAAA,CACAG,6BAAAA,CAAA,CACA,CAAMZ,EAAAkC,GACN,GAAAlB,EAAA,CACArH,EAAAuI,EAAAvI,CAAAA,EAAA/B,MAAA,OAAA+B,EAAAA,CAAA,EACA,QACA,CACA,IAAAuD,EAAA,EAAA0D,EACA3D,EAAAR,EAAAS,EAAAuD,EAAAvC,SAAA,GAAA0C,GAAAH,GACA,IAAAxD,EAAA,CACA,IAAAC,GAMA,CADAD,CAAAA,EAAAR,EAAAgE,EAAA,EALA,CAEA9G,EAAAuI,EAAAvI,CAAAA,EAAA/B,MAAA,OAAA+B,EAAAA,CAAA,EACA,QACA,CAOAuD,EAAA,EACA,CACA,IAAAiF,EAAAT,EAAAxB,GAAApG,IAAA,MACAsI,EAAAzB,EAAAwB,EAzKA,IAyKAA,EACAE,EAAAD,EAAAnF,EACA,GAAA8E,EAAAO,QAAA,CAAAD,GAEA,SAEAN,EAAAjD,IAAA,CAAAuD,GACA,IAAAE,EAAAvF,EAAAC,EAAAC,GACA,QAAAvF,EAAA,EAAoBA,EAAA4K,EAAA3K,MAAA,CAA2B,EAAAD,EAAA,CAC/C,IAAA6K,EAAAD,CAAA,CAAA5K,EAAA,CACAoK,EAAAjD,IAAA,CAAAsD,EAAAI,EACA,CAEA7I,EAAAuI,EAAAvI,CAAAA,EAAA/B,MAAA,OAAA+B,EAAAA,CAAA,CACA,CACA,OAAAA,CACA,EAWA,SAAA8I,IACA,IACAC,EACAC,EAFArC,EAAA,EAGAsC,EAAA,GACA,KAAAtC,EAAAvE,UAAAnE,MAAA,EACA8K,CAAAA,EAAA3G,SAAA,CAAAuE,IAAA,GACAqC,CAAAA,EAAAE,EAAAH,EAAA,IACAE,GAAAA,CAAAA,GAAA,KACAA,GAAAD,GAIA,OAAAC,CACA,CACA,IAAAC,EAAAC,QAIAH,EAHA,oBAAAG,EACA,OAAAA,EAGA,IAAAF,EAAA,GACA,QAAAG,EAAA,EAAkBA,EAAAD,EAAAlL,MAAA,CAAgBmL,IAClCD,CAAA,CAAAC,EAAA,EACAJ,CAAAA,EAAAE,EAAAC,CAAA,CAAAC,EAAA,KACAH,GAAAA,CAAAA,GAAA,KACAA,GAAAD,GAIA,OAAAC,CACA,EA2BAI,EAAAhE,IACA,IAAAiE,EAAA7E,GAAAA,CAAA,CAAAY,EAAA,KAEA,OADAiE,EAAApE,aAAA,IACAoE,CACA,EACAC,EAAA,8BACAC,EAAA,8BACAC,EAAA,aACAC,EAAA,mCACAC,EAAA,4HACAC,EAAA,qDAEAC,EAAA,kEACAC,EAAA,+FACAC,EAAAxM,GAAAkM,EAAA3J,IAAA,CAAAvC,GACAyM,EAAAzM,GAAA,EAAAA,GAAA,CAAA0M,OAAAC,KAAA,CAAAD,OAAA1M,IACA4M,EAAA5M,GAAA,EAAAA,GAAA0M,OAAAE,SAAA,CAAAF,OAAA1M,IACA6M,EAAA7M,GAAAA,EAAA+J,QAAA,OAAA0C,EAAAzM,EAAAuG,KAAA,QACAuG,EAAA9M,GAAAmM,EAAA5J,IAAA,CAAAvC,GACA+M,EAAA,OACAC,EAAAhN,GAIAoM,EAAA7J,IAAA,CAAAvC,IAAA,CAAAqM,EAAA9J,IAAA,CAAAvC,GACAiN,EAAA,OACAC,EAAAlN,GAAAsM,EAAA/J,IAAA,CAAAvC,GACAmN,EAAAnN,GAAAuM,EAAAhK,IAAA,CAAAvC,GACAoN,EAAApN,GAAA,CAAAqN,EAAArN,IAAA,CAAAsN,EAAAtN,GACAuN,EAAAvN,GAAAwN,GAAAxN,EAAAyN,GAAAR,GACAI,EAAArN,GAAAgM,EAAAzJ,IAAA,CAAAvC,GACA0N,EAAA1N,GAAAwN,GAAAxN,EAAA2N,GAAAX,GACAY,EAAA5N,GAAAwN,GAAAxN,EAAA6N,GAAApB,GACAqB,EAAA9N,GAAAwN,GAAAxN,EAAA+N,GAAAd,GACAe,EAAAhO,GAAAwN,GAAAxN,EAAAiO,GAAAd,GACAe,EAAAlO,GAAAwN,GAAAxN,EAAAmO,GAAAjB,GACAI,EAAAtN,GAAAiM,EAAA1J,IAAA,CAAAvC,GACAoO,EAAApO,GAAAqO,GAAArO,EAAA2N,IACAW,EAAAtO,GAAAqO,GAAArO,EAAAuO,IACAC,EAAAxO,GAAAqO,GAAArO,EAAA+N,IACAU,EAAAzO,GAAAqO,GAAArO,EAAAyN,IACAiB,EAAA1O,GAAAqO,GAAArO,EAAAiO,IACAU,EAAA3O,GAAAqO,GAAArO,EAAAmO,GAAA,IAEAX,GAAA,CAAAxN,EAAA4O,EAAAC,KACA,IAAApM,EAAAuJ,EAAAlF,IAAA,CAAA9G,SACA,EAAAyC,GACA,MACAmM,EAAAnM,CAAA,KAEAoM,EAAApM,CAAA,IADA,CAIA,EACA4L,GAAA,CAAArO,EAAA4O,EAAAE,EAAA,MACA,IAAArM,EAAAwJ,EAAAnF,IAAA,CAAA9G,SACA,EAAAyC,GACA,MACAmM,EAAAnM,CAAA,KAEAqM,CADA,CAIA,EAEAf,GAAAgB,GAAAA,aAAAA,GAAAA,eAAAA,EACAd,GAAAc,GAAAA,UAAAA,GAAAA,QAAAA,EACAtB,GAAAsB,GAAAA,WAAAA,GAAAA,SAAAA,GAAAA,YAAAA,EACApB,GAAAoB,GAAAA,WAAAA,EACAlB,GAAAkB,GAAAA,WAAAA,EACAR,GAAAQ,GAAAA,gBAAAA,EACAZ,GAAAY,GAAAA,WAAAA,CAwBC5K,CAAAA,OAAA6K,WAAA,CAq+ED,IAAAC,GAAAC,SA9lFAC,CAAA,IAAAC,CAAA,MACAxE,EACAyE,EACAC,EACA,IAAAC,EACA,SAAA5E,CAAA,EAMA,OAHA0E,EAAAzE,CADAA,EAAAL,EADA6E,EAAAI,MAAA,EAAAC,EAAAC,IAAAA,EAAAD,GAAAN,KACA,EACA3G,KAAA,CAAA1G,GAAA,CACAwN,EAAA1E,EAAApC,KAAA,CAAAL,GAAA,CACAoH,EAAAI,EACAA,EAAAhF,EACA,EACA,SAAAgF,EAAAhF,CAAA,EACA,IAAAiF,EAAAP,EAAA1E,GACA,GAAAiF,EACA,OAAAA,EAEA,IAAAnN,EAAAiI,EAAAC,EAAAC,GAEA,OADA0E,EAAA3E,EAAAlI,GACAA,CACA,CACA,kBACA,OAAA8M,EAAAhE,EAAAsE,KAAA,MAAAhL,WACA,CACA,EAmGA,KAMA,IAAAiL,EAAAhE,EAAA,SACAiE,EAAAjE,EAAA,QACAkE,EAAAlE,EAAA,QACAmE,EAAAnE,EAAA,eACAoE,EAAApE,EAAA,YACAqE,EAAArE,EAAA,WACAsE,EAAAtE,EAAA,cACAuE,EAAAvE,EAAA,aACAwE,EAAAxE,EAAA,WACAyE,EAAAzE,EAAA,UACA0E,EAAA1E,EAAA,UACA2E,EAAA3E,EAAA,gBACA4E,EAAA5E,EAAA,eACA6E,EAAA7E,EAAA,eACA8E,EAAA9E,EAAA,QACA+E,EAAA/E,EAAA,eACAgF,EAAAhF,EAAA,UACAiF,EAAAjF,EAAA,QACAkF,EAAAlF,EAAA,WAQAmF,EAAA,uEACAC,EAAA,uDAEA,uBAEA,2BAEA,6BAEA,eACAC,EAAA,QAAAD,IAAA5D,EAAAD,EAAA,CACA+D,EAAA,gDACAC,EAAA,8BACAC,EAAA,KAAAhE,EAAAD,EAAAiD,EAAA,CACAiB,EAAA,KAAA/E,EAAA,iBAAA8E,IAAA,CACAE,EAAA,KAAA5E,EAAA,iBAAAU,EAAAD,EAAA,CACAoE,EAAA,aACAC,KAAA,QAAA9E,EAAAU,EAAAD,EAAA,EACGT,EAAAU,EAAAD,EAAA,CACHsE,EAAA,KAAA/E,EAAA,OAAAU,EAAAD,EAAA,CACAuE,EAAA,6BAAAtE,EAAAD,EAAA,CACAwE,EAAA,uGACAC,EAAA,gEACAC,GAAA,eAAAT,IAAA,CACAU,GAAA,KAAAxF,EAAA,uEAAA8E,IAAA,CACAW,GAAA,KAAAnC,EAAAxC,EAAAD,EAAA,CACA6E,GAAA,QAAAhB,IAAA1C,EAAAV,EAAA,CACAqE,SAAA,CAAA7E,EAAAD,EAAA,EACG,CACH+E,GAAA,kBACAC,OAAA,8BACG,CACHC,GAAA,8BAAA7D,EAAAlB,EAAA,CACAgF,KAAA,CAAAjF,EAAAD,EAAA,EACG,CACHmF,GAAA,KAAA3F,EAAAuB,EAAAV,EAAA,CACA+E,GAAA,KAEA,iBAAAlC,EAAAjD,EAAAD,EAAA,CACAqF,GAAA,QAAAjG,EAAA2B,EAAAV,EAAA,CACAiF,GAAA,yCACAC,GAAA,sLACAC,GAAA,KAAApG,EAAAI,EAAA2B,EAAAV,EAAA,CACAgF,GAAA,KAEA,UAAAlC,EAAAtD,EAAAD,EAAA,CACA0F,GAAA,YAAAtG,EAAAa,EAAAD,EAAA,CACA2F,GAAA,YAAAvG,EAAAa,EAAAD,EAAA,CACA4F,GAAA,KAAAxG,EAAAa,EAAAD,EAAA,CACA6F,GAAA,KAAA1G,EAAA,UAAA8E,IAAA,CACA,OACA/I,UAAA,IACArB,MAAA,CACAiM,QAAA,iCACAC,OAAA,UACAC,KAAA,CAAAvG,EAAA,CACAwG,WAAA,CAAAxG,EAAA,CACAyG,MAAA,CAAAxG,EAAA,CACAyG,UAAA,CAAA1G,EAAA,CACA,eAAAA,EAAA,CACA2G,KAAA,sBACAC,KAAA,CAAAtG,EAAA,CACA,oGACA,gBAAAN,EAAA,CACA6G,QAAA,mDACAC,YAAA,yDACAC,OAAA,CAAA/G,EAAA,CACAgH,OAAA,CAAAhH,EAAA,CACAiH,QAAA,MAAAtH,EAAA,CACAuH,KAAA,CAAAlH,EAAA,CACA,eAAAA,EAAA,CACAmH,SAAA,sDAEA9M,YAAA,CAQAiM,OAAA,EACAA,OAAA,iBAAA5G,EAAAa,EAAAC,EAAAwD,EAAA,EACO,CAMP0C,UAAA,cAKAU,QAAA,EACAA,QAAA,CAAAzH,EAAAY,EAAAC,EAAA+C,EAAA,EACO,CAKP,gBACA,cAAAY,GACA,EAAO,CAKP,iBACA,eAAAA,GACA,EAAO,CAKP,iBACA,6DACO,CAKP,mBACA,oCACO,CAKPkD,IAAA,EACAA,IAAA,sBACO,CAKPC,QAAA,wRAKAC,GAAA,0BAKAC,MAAA,EACAA,MAAA,uCACO,CAKPC,MAAA,EACAA,MAAA,8CACO,CAKPC,UAAA,6BAKA,eACAC,OAAA,gDACO,CAKP,oBACAA,OAAAtD,GACA,EAAO,CAKPuD,SAAA,EACAA,SAAAtD,GACA,EAAO,CAKP,eACA,aAAAA,GACA,EAAO,CAKP,eACA,aAAAA,GACA,EAAO,CAKPuD,WAAA,EACAA,WAAAtD,GACA,EAAO,CAKP,iBACA,eAAAA,GACA,EAAO,CAKP,iBACA,eAAAA,GACA,EAAO,CAKPc,SAAA,kDAKAyC,MAAA,EACAA,MAAArD,GACA,EAAO,CAKP,YACA,UAAAA,GACA,EAAO,CAKP,YACA,UAAAA,GACA,EAAO,CAKPsD,MAAA,EACAA,MAAAtD,GACA,EAAO,CAKPuD,IAAA,EACAA,IAAAvD,GACA,EAAO,CAKPwD,IAAA,EACAA,IAAAxD,GACA,EAAO,CAKPyD,MAAA,EACAA,MAAAzD,GACA,EAAO,CAKP0D,OAAA,EACAA,OAAA1D,GACA,EAAO,CAKP2D,KAAA,EACAA,KAAA3D,GACA,EAAO,CAKP4D,WAAA,mCAKAC,EAAA,EACAA,EAAA,CAAAxI,EAAA,OAAAU,EAAAD,EAAA,EACO,CAQPgI,MAAA,EACAA,MAAA,CAAA7I,EAAA,cAAA6D,KAAAiB,IAAA,EACO,CAKP,mBACAgE,KAAA,2CACO,CAKP,cACAA,KAAA,kCACO,CAKPA,KAAA,EACAA,KAAA,CAAA7I,EAAAD,EAAA,wBAAAa,EAAA,EACO,CAKPkI,KAAA,EACAA,KAAA,IAAA9I,EAAAa,EAAAD,EAAA,EACO,CAKPmI,OAAA,EACAA,OAAA,IAAA/I,EAAAa,EAAAD,EAAA,EACO,CAKPoI,MAAA,EACAA,MAAA,CAAA7I,EAAA,sBAAAU,EAAAD,EAAA,EACO,CAKP,cACA,YAAAmE,GACA,EAAO,CAKP,kBACAkE,IAAAjE,GACA,EAAO,CAKP,cACA,YAAAE,GACA,EAAO,CAKP,YACA,UAAAA,GACA,EAAO,CAKP,cACA,YAAAH,GACA,EAAO,CAKP,kBACAmE,IAAAlE,GACA,EAAO,CAKP,cACA,YAAAE,GACA,EAAO,CAKP,YACA,UAAAA,GACA,EAAO,CAKP,cACA,2DACO,CAKP,cACA,YAAAC,GACA,EAAO,CAKP,cACA,YAAAA,GACA,EAAO,CAKPgE,IAAA,EACAA,IAAAtE,GACA,EAAO,CAKP,UACA,QAAAA,GACA,EAAO,CAKP,UACA,QAAAA,GACA,EAAO,CAKP,oBACAuE,QAAA,IAAAhE,IAAA,WACO,CAKP,kBACA,oBAAAC,IAAA,WACO,CAKP,iBACA,0BAAAA,IAAA,EACO,CAKP,kBACAgE,QAAA,aAAAjE,IAAA,EACO,CAKP,gBACAkE,MAAA,IAAAjE,IAAA,CACAkE,SAAA,aACS,EACF,CAKP,eACAC,KAAA,WAAAnE,IAAA,CACAkE,SAAA,aACS,EACF,CAKP,kBACA,gBAAAnE,GACA,EAAO,CAKP,gBACA,kBAAAC,IAAA,aACO,CAKP,eACA,wBAAAA,IAAA,EACO,CAMPoE,EAAA,EACAA,EAAA5E,GACA,EAAO,CAKP6E,GAAA,EACAA,GAAA7E,GACA,EAAO,CAKP8E,GAAA,EACAA,GAAA9E,GACA,EAAO,CAKP+E,GAAA,EACAA,GAAA/E,GACA,EAAO,CAKPgF,GAAA,EACAA,GAAAhF,GACA,EAAO,CAKPiF,GAAA,EACAA,GAAAjF,GACA,EAAO,CAKPkF,GAAA,EACAA,GAAAlF,GACA,EAAO,CAKPmF,GAAA,EACAA,GAAAnF,GACA,EAAO,CAKPoF,GAAA,EACAA,GAAApF,GACA,EAAO,CAKPqF,EAAA,EACAA,EAAA5E,IACA,EAAO,CAKP6E,GAAA,EACAA,GAAA7E,IACA,EAAO,CAKP8E,GAAA,EACAA,GAAA9E,IACA,EAAO,CAKP+E,GAAA,EACAA,GAAA/E,IACA,EAAO,CAKPgF,GAAA,EACAA,GAAAhF,IACA,EAAO,CAKPiF,GAAA,EACAA,GAAAjF,IACA,EAAO,CAKPkF,GAAA,EACAA,GAAAlF,IACA,EAAO,CAKPmF,GAAA,EACAA,GAAAnF,IACA,EAAO,CAKPoF,GAAA,EACAA,GAAApF,IACA,EAAO,CAKP,YACA,UAAAT,GACA,EAAO,CAKP,sCAKA,YACA,UAAAA,GACA,EAAO,CAKP,sCAQAiB,KAAA,EACAA,KAAAP,IACA,EAAO,CAKPoF,EAAA,EACAA,EAAA,CAAA/G,EAAA,YAAA2B,KAAA,EACO,CAKP,UACA,SAAA3B,EAAA,SACA,UAAA2B,KAAA,EACO,CAKP,UACA,SAAA3B,EAAA,gBACA,QACA,CACAgH,OAAA,CAAAjH,EAAA,KACS4B,KAAA,EACF,CAKPsF,EAAA,EACAA,EAAA,kBAAAtF,KAAA,EACO,CAKP,UACA,iCAAAA,KAAA,EACO,CAKP,UACA,0BAAAA,KAAA,EACO,CAQP,cACAgC,KAAA,QAAAhE,EAAA5B,EAAAV,EAAA,EACO,CAKP,wDAKA,qCAKA,gBACAgG,KAAA,CAAAzD,EAAA3C,EAAAM,EAAA,EACO,CAKP,iBACA,uJAAAf,EAAAQ,EAAA,EACO,CAKP,gBACAqG,KAAA,CAAApF,EAAAjB,EAAA0C,EAAA,EACO,CAKP,6BAKA,0BAKA,oCAKA,6CAKA,mDAKA,0DAKAkE,SAAA,EACAA,SAAA,CAAA/D,EAAA5C,EAAAD,EAAA,EACO,CAKP,eACA,cAAAZ,EAAA,OAAAa,EAAAM,EAAA,EACO,CAKP+F,QAAA,EACAA,QAAA,CACAxD,KAAAmB,IAAA,EACO,CAKP,eACA,qBAAAhE,EAAAD,EAAA,EACO,CAKP,wBACAkK,KAAA,sBACO,CAKP,oBACAA,KAAA,yBAAAjK,EAAAD,EAAA,EACO,CAKP,mBACA2G,KAAA,mDACO,CAMP,sBACAwD,YAAAvF,IACA,EAAO,CAKP,eACA+B,KAAA/B,IACA,EAAO,CAKP,yEAKA,0BACAwF,WAAA,IAAA9E,KAAA,SACO,CAKP,8BACA8E,WAAA,CAAAhL,EAAA,mBAAAa,EAAAI,EAAA,EACO,CAKP,0BACA+J,WAAAxF,IACA,EAAO,CAKP,qBACA,oBAAAxF,EAAA,OAAAa,EAAAD,EAAA,EACO,CAKP,sEAKA,yDAKA,cACA2G,KAAA,sCACO,CAKP0D,OAAA,EACAA,OAAApG,GACA,EAAO,CAKP,mBACAqG,MAAA,2EAAArK,EAAAD,EAAA,EACO,CAKPuK,WAAA,EACAA,WAAA,gEACO,CAKPC,MAAA,EACAA,MAAA,iCACO,CAKPC,KAAA,EACAA,KAAA,oCACO,CAKPC,QAAA,EACAA,QAAA,0BACO,CAKPjC,QAAA,EACAA,QAAA,QAAAxI,EAAAD,EAAA,EACO,CAQP,kBACA2K,GAAA,4BACO,CAKP,YACA,iDACO,CAKP,cACA,4CACO,CAKP,gBACAA,GAAA9F,IACA,EAAO,CAKP,cACA8F,GAAA5F,IACA,EAAO,CAKP,YACA4F,GAAA1F,IACA,EAAO,CAKP,aACA0F,GAAA,SACAC,OAAA,EACAC,GAAA,uCACWtL,EAAAU,EAAAD,EAAA,CACX8K,OAAA,IAAA7K,EAAAD,EAAA,CACA+K,MAAA,CAAAxL,EAAAU,EAAAD,EAAA,EACSqB,EAAAV,EAAA,EACF,CAKP,aACAgK,GAAA/F,IACA,EAAO,CAKP,sBACAoG,KAAA7F,IACA,EAAO,CAKP,qBACA8F,IAAA9F,IACA,EAAO,CAKP,oBACA0F,GAAA1F,IACA,EAAO,CAKP,kBACA6F,KAAApG,IACA,EAAO,CAKP,iBACAqG,IAAArG,IACA,EAAO,CAKP,gBACAiG,GAAAjG,IACA,EAAO,CAQPsG,QAAA,EACAA,QAAA9F,IACA,EAAO,CAKP,cACA,YAAAA,IACA,EAAO,CAKP,cACA,YAAAA,IACA,EAAO,CAKP,cACA,YAAAA,IACA,EAAO,CAKP,cACA,YAAAA,IACA,EAAO,CAKP,cACA,YAAAA,IACA,EAAO,CAKP,cACA,YAAAA,IACA,EAAO,CAKP,eACA,aAAAA,IACA,EAAO,CAKP,eACA,aAAAA,IACA,EAAO,CAKP,eACA,aAAAA,IACA,EAAO,CAKP,eACA,aAAAA,IACA,EAAO,CAKP,eACA,aAAAA,IACA,EAAO,CAKP,eACA,aAAAA,IACA,EAAO,CAKP,eACA,aAAAA,IACA,EAAO,CAKP,eACA,aAAAA,IACA,EAAO,CAKP,aACA+F,OAAA9F,IACA,EAAO,CAKP,eACA,WAAAA,IACA,EAAO,CAKP,eACA,WAAAA,IACA,EAAO,CAKP,eACA,WAAAA,IACA,EAAO,CAKP,eACA,WAAAA,IACA,EAAO,CAKP,eACA,WAAAA,IACA,EAAO,CAKP,eACA,WAAAA,IACA,EAAO,CAKP,eACA,WAAAA,IACA,EAAO,CAKP,eACA,WAAAA,IACA,EAAO,CAKP,aACA,WAAAA,IACA,EAAO,CAKP,wCAKA,aACA,WAAAA,IACA,EAAO,CAKP,wCAKA,iBACA8F,OAAA,IAAA7F,KAAA,kBACO,CAKP,iBACA8F,OAAA,IAAA9F,KAAA,kBACO,CAKP,iBACA6F,OAAAvG,IACA,EAAO,CAKP,mBACA,WAAAA,IACA,EAAO,CAKP,mBACA,WAAAA,IACA,EAAO,CAKP,mBACA,WAAAA,IACA,EAAO,CAKP,mBACA,WAAAA,IACA,EAAO,CAKP,mBACA,WAAAA,IACA,EAAO,CAKP,mBACA,WAAAA,IACA,EAAO,CAKP,mBACA,WAAAA,IACA,EAAO,CAKP,mBACA,WAAAA,IACA,EAAO,CAKP,iBACAwG,OAAAxG,IACA,EAAO,CAKP,kBACAyG,QAAA,IAAA/F,KAAA,kBACO,CAKP,mBACA,kBAAAlG,EAAAa,EAAAD,EAAA,EACO,CAKP,cACAqL,QAAA,IAAAjM,EAAA2B,EAAAV,EAAA,EACO,CAKP,kBACAgL,QAAAzG,IACA,EAAO,CAQP6B,OAAA,EACAA,OAAA,CAEA,UAAAtD,EAAA7B,EAAAT,EAAA,EACO,CAKP,iBACA4F,OAAA7B,IACA,EAAO,CAKP,iBACA,uBAAAxB,EAAA9B,EAAAT,EAAA,EACO,CAKP,uBACA,eAAA+D,IACA,EAAO,CAKP,WACA0G,KAAAjG,IACA,EAAO,CAOP,8BAKA,eACAiG,KAAA1G,IACA,EAAO,CAOP,kBACA,eAAAxF,EAAAiB,EAAA,EACO,CAOP,sBACA,cAAAuE,IACA,EAAO,CAKP,iBACA,aAAAS,IACA,EAAO,CAKP,qBACA,aAAAT,IACA,EAAO,CAKP,gBACA,sBAAAvB,EAAA/B,EAAAT,EAAA,EACO,CAKP,sBACA,cAAA+D,IACA,EAAO,CAKP2G,QAAA,EACAA,QAAA,CAAAnM,EAAAa,EAAAD,EAAA,EACO,CAKP,cACA,gBAAAuF,KAAA,+BACO,CAKP,aACA,WAAAA,IACA,EAAO,CAKP,cACA,mEACO,gBAKP,mBACAiG,KAAA,0CACO,CAKP,0BACA,eAAApM,EAAA,EACO,CACP,+BACA,mBAAAoG,IACA,EAAO,CACP,6BACA,iBAAAA,IACA,EAAO,CACP,iCACA,mBAAAZ,IACA,EAAO,CACP,+BACA,iBAAAA,IACA,EAAO,CACP,0BACA,cAAAY,IACA,EAAO,CACP,wBACA,YAAAA,IACA,EAAO,CACP,4BACA,cAAAZ,IACA,EAAO,CACP,0BACA,YAAAA,IACA,EAAO,CACP,0BACA,cAAAY,IACA,EAAO,CACP,wBACA,YAAAA,IACA,EAAO,CACP,4BACA,cAAAZ,IACA,EAAO,CACP,0BACA,YAAAA,IACA,EAAO,CACP,0BACA,cAAAY,IACA,EAAO,CACP,wBACA,YAAAA,IACA,EAAO,CACP,4BACA,cAAAZ,IACA,EAAO,CACP,0BACA,YAAAA,IACA,EAAO,CACP,0BACA,cAAAY,IACA,EAAO,CACP,wBACA,YAAAA,IACA,EAAO,CACP,4BACA,cAAAZ,IACA,EAAO,CACP,0BACA,YAAAA,IACA,EAAO,CACP,0BACA,cAAAY,IACA,EAAO,CACP,wBACA,YAAAA,IACA,EAAO,CACP,4BACA,cAAAZ,IACA,EAAO,CACP,0BACA,YAAAA,IACA,EAAO,CACP,0BACA,cAAAY,IACA,EAAO,CACP,wBACA,YAAAA,IACA,EAAO,CACP,4BACA,cAAAZ,IACA,EAAO,CACP,0BACA,YAAAA,IACA,EAAO,CACP,sBACA,eAAA3E,EAAAD,EAAA,EACO,CACP,+BACA,mBAAAwF,IACA,EAAO,CACP,6BACA,iBAAAA,IACA,EAAO,CACP,iCACA,mBAAAZ,IACA,EAAO,CACP,+BACA,iBAAAA,IACA,EAAO,CACP,4BACA,oCACO,CACP,2BACA,gBACA6G,QAAA,kBACAC,SAAA,mBACS,EACF,CACP,0BACA,iBAAA7H,GACA,EAAO,CACP,yBACA,cAAAzE,EAAA,EACO,CACP,8BACA,kBAAAoG,IACA,EAAO,CACP,4BACA,gBAAAA,IACA,EAAO,CACP,gCACA,kBAAAZ,IACA,EAAO,CACP,8BACA,gBAAAA,IACA,EAAO,CAKP,cACA4G,KAAA,+BACO,CAKP,gBACA,qEACO,CAKP,kBACAA,KAAA3G,IACA,EAAO,CAKP,gBACA2G,KA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","sources":["webpack://_N_E/./node_modules/.pnpm/@radix-ui+react-compose-refs@1.1.2_@types+react@18.3.23_react@18.3.1/node_modules/@radix-ui/react-compose-refs/dist/index.mjs","webpack://_N_E/./node_modules/.pnpm/@radix-ui+react-slot@1.2.3_@types+react@18.3.23_react@18.3.1/node_modules/@radix-ui/react-slot/dist/index.mjs","webpack://_N_E/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs?5b74","webpack://_N_E/./node_modules/.pnpm/tailwind-merge@3.3.1/node_modules/tailwind-merge/dist/bundle-mjs.mjs?1169"],"sourcesContent":["// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    classGroups\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  for (const classGroupId in classGroups) {\n    processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);\n  }\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst MODIFIER_SEPARATOR = ':';\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;\nconst createParseClassName = config => {\n  const {\n    prefix,\n    experimentalParseClassName\n  } = config;\n  /**\n   * Parse class name into parts.\n   *\n   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n   */\n  let parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let parenDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0 && parenDepth === 0) {\n        if (currentCharacter === MODIFIER_SEPARATOR) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + MODIFIER_SEPARATOR_LENGTH;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      } else if (currentCharacter === '(') {\n        parenDepth++;\n      } else if (currentCharacter === ')') {\n        parenDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);\n    const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (prefix) {\n    const fullPrefix = prefix + MODIFIER_SEPARATOR;\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {\n      isExternal: true,\n      modifiers: [],\n      hasImportantModifier: false,\n      baseClassName: className,\n      maybePostfixModifierPosition: undefined\n    };\n  }\n  if (experimentalParseClassName) {\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => experimentalParseClassName({\n      className,\n      parseClassName: parseClassNameOriginal\n    });\n  }\n  return parseClassName;\n};\nconst stripImportantModifier = baseClassName => {\n  if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(0, baseClassName.length - 1);\n  }\n  /**\n   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n   */\n  if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(1);\n  }\n  return baseClassName;\n};\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst createSortModifiers = config => {\n  const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map(modifier => [modifier, true]));\n  const sortModifiers = modifiers => {\n    if (modifiers.length <= 1) {\n      return modifiers;\n    }\n    const sortedModifiers = [];\n    let unsortedModifiers = [];\n    modifiers.forEach(modifier => {\n      const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];\n      if (isPositionSensitive) {\n        sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n        unsortedModifiers = [];\n      } else {\n        unsortedModifiers.push(modifier);\n      }\n    });\n    sortedModifiers.push(...unsortedModifiers.sort());\n    return sortedModifiers;\n  };\n  return sortModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  sortModifiers: createSortModifiers(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds,\n    sortModifiers\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      isExternal,\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    if (isExternal) {\n      result = originalClassName + (result.length > 0 ? ' ' + result : result);\n      continue;\n    }\n    let hasPostfixModifier = !!maybePostfixModifierPosition;\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i;\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isFraction = value => fractionRegex.test(value);\nconst isNumber = value => !!value && !Number.isNaN(Number(value));\nconst isInteger = value => !!value && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst isAny = () => true;\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst isAnyNonArbitrary = value => !isArbitraryValue(value) && !isArbitraryVariable(value);\nconst isArbitrarySize = value => getIsArbitraryValue(value, isLabelSize, isNever);\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, isLabelLength, isLengthOnly);\nconst isArbitraryNumber = value => getIsArbitraryValue(value, isLabelNumber, isNumber);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, isLabelPosition, isNever);\nconst isArbitraryImage = value => getIsArbitraryValue(value, isLabelImage, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, isLabelShadow, isShadow);\nconst isArbitraryVariable = value => arbitraryVariableRegex.test(value);\nconst isArbitraryVariableLength = value => getIsArbitraryVariable(value, isLabelLength);\nconst isArbitraryVariableFamilyName = value => getIsArbitraryVariable(value, isLabelFamilyName);\nconst isArbitraryVariablePosition = value => getIsArbitraryVariable(value, isLabelPosition);\nconst isArbitraryVariableSize = value => getIsArbitraryVariable(value, isLabelSize);\nconst isArbitraryVariableImage = value => getIsArbitraryVariable(value, isLabelImage);\nconst isArbitraryVariableShadow = value => getIsArbitraryVariable(value, isLabelShadow, true);\n// Helpers\nconst getIsArbitraryValue = (value, testLabel, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false) => {\n  const result = arbitraryVariableRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return shouldMatchNoLabel;\n  }\n  return false;\n};\n// Labels\nconst isLabelPosition = label => label === 'position' || label === 'percentage';\nconst isLabelImage = label => label === 'image' || label === 'url';\nconst isLabelSize = label => label === 'length' || label === 'size' || label === 'bg-size';\nconst isLabelLength = label => label === 'length';\nconst isLabelNumber = label => label === 'number';\nconst isLabelFamilyName = label => label === 'family-name';\nconst isLabelShadow = label => label === 'shadow';\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isAnyNonArbitrary,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isArbitraryVariable,\n  isArbitraryVariableFamilyName,\n  isArbitraryVariableImage,\n  isArbitraryVariableLength,\n  isArbitraryVariablePosition,\n  isArbitraryVariableShadow,\n  isArbitraryVariableSize,\n  isFraction,\n  isInteger,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  /**\n   * Theme getters for theme variable namespaces\n   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n   */\n  /***/\n  const themeColor = fromTheme('color');\n  const themeFont = fromTheme('font');\n  const themeText = fromTheme('text');\n  const themeFontWeight = fromTheme('font-weight');\n  const themeTracking = fromTheme('tracking');\n  const themeLeading = fromTheme('leading');\n  const themeBreakpoint = fromTheme('breakpoint');\n  const themeContainer = fromTheme('container');\n  const themeSpacing = fromTheme('spacing');\n  const themeRadius = fromTheme('radius');\n  const themeShadow = fromTheme('shadow');\n  const themeInsetShadow = fromTheme('inset-shadow');\n  const themeTextShadow = fromTheme('text-shadow');\n  const themeDropShadow = fromTheme('drop-shadow');\n  const themeBlur = fromTheme('blur');\n  const themePerspective = fromTheme('perspective');\n  const themeAspect = fromTheme('aspect');\n  const themeEase = fromTheme('ease');\n  const themeAnimate = fromTheme('animate');\n  /**\n   * Helpers to avoid repeating the same scales\n   *\n   * We use functions that create a new array every time they're called instead of static arrays.\n   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n   */\n  /***/\n  const scaleBreak = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const scalePosition = () => ['center', 'top', 'bottom', 'left', 'right', 'top-left',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'left-top', 'top-right',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'right-top', 'bottom-right',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'right-bottom', 'bottom-left',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'left-bottom'];\n  const scalePositionWithArbitrary = () => [...scalePosition(), isArbitraryVariable, isArbitraryValue];\n  const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const scaleOverscroll = () => ['auto', 'contain', 'none'];\n  const scaleUnambiguousSpacing = () => [isArbitraryVariable, isArbitraryValue, themeSpacing];\n  const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()];\n  const scaleGridTemplateColsRows = () => [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartAndEnd = () => ['auto', {\n    span: ['full', isInteger, isArbitraryVariable, isArbitraryValue]\n  }, isInteger, isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartOrEnd = () => [isInteger, 'auto', isArbitraryVariable, isArbitraryValue];\n  const scaleGridAutoColsRows = () => ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue];\n  const scaleAlignPrimaryAxis = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch', 'baseline', 'center-safe', 'end-safe'];\n  const scaleAlignSecondaryAxis = () => ['start', 'end', 'center', 'stretch', 'center-safe', 'end-safe'];\n  const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()];\n  const scaleSizing = () => [isFraction, 'auto', 'full', 'dvw', 'dvh', 'lvw', 'lvh', 'svw', 'svh', 'min', 'max', 'fit', ...scaleUnambiguousSpacing()];\n  const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue];\n  const scaleBgPosition = () => [...scalePosition(), isArbitraryVariablePosition, isArbitraryPosition, {\n    position: [isArbitraryVariable, isArbitraryValue]\n  }];\n  const scaleBgRepeat = () => ['no-repeat', {\n    repeat: ['', 'x', 'y', 'space', 'round']\n  }];\n  const scaleBgSize = () => ['auto', 'cover', 'contain', isArbitraryVariableSize, isArbitrarySize, {\n    size: [isArbitraryVariable, isArbitraryValue]\n  }];\n  const scaleGradientStopPosition = () => [isPercent, isArbitraryVariableLength, isArbitraryLength];\n  const scaleRadius = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', 'full', themeRadius, isArbitraryVariable, isArbitraryValue];\n  const scaleBorderWidth = () => ['', isNumber, isArbitraryVariableLength, isArbitraryLength];\n  const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'];\n  const scaleBlendMode = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const scaleMaskImagePosition = () => [isNumber, isPercent, isArbitraryVariablePosition, isArbitraryPosition];\n  const scaleBlur = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', themeBlur, isArbitraryVariable, isArbitraryValue];\n  const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()];\n  return {\n    cacheSize: 500,\n    theme: {\n      animate: ['spin', 'ping', 'pulse', 'bounce'],\n      aspect: ['video'],\n      blur: [isTshirtSize],\n      breakpoint: [isTshirtSize],\n      color: [isAny],\n      container: [isTshirtSize],\n      'drop-shadow': [isTshirtSize],\n      ease: ['in', 'out', 'in-out'],\n      font: [isAnyNonArbitrary],\n      'font-weight': ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black'],\n      'inset-shadow': [isTshirtSize],\n      leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\n      perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\n      radius: [isTshirtSize],\n      shadow: [isTshirtSize],\n      spacing: ['px', isNumber],\n      text: [isTshirtSize],\n      'text-shadow': [isTshirtSize],\n      tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest']\n    },\n    classGroups: {\n      // --------------\n      // --- Layout ---\n      // --------------\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', isFraction, isArbitraryValue, isArbitraryVariable, themeAspect]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       * @deprecated since Tailwind CSS v4.0.0\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': scaleBreak()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': scaleBreak()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Screen Reader Only\n       * @see https://tailwindcss.com/docs/display#screen-reader-only\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: scalePositionWithArbitrary()\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: scaleOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': scaleOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': scaleOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: scaleOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': scaleOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': scaleOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: scaleInset()\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': scaleInset()\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': scaleInset()\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: scaleInset()\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: scaleInset()\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: scaleInset()\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: scaleInset()\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: scaleInset()\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: scaleInset()\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------------\n      // --- Flexbox and Grid ---\n      // ------------------------\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: [isFraction, 'full', 'auto', themeContainer, ...scaleUnambiguousSpacing()]\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['nowrap', 'wrap', 'wrap-reverse']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: [isInteger, 'first', 'last', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': scaleGridTemplateColsRows()\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: scaleGridColRowStartAndEnd()\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': scaleGridTemplateColsRows()\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: scaleGridColRowStartAndEnd()\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': scaleGridAutoColsRows()\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': scaleGridAutoColsRows()\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: [...scaleAlignPrimaryAxis(), 'normal']\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': [...scaleAlignSecondaryAxis(), 'normal']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...scaleAlignPrimaryAxis()]\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: [...scaleAlignSecondaryAxis(), {\n          baseline: ['', 'last']\n        }]\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', ...scaleAlignSecondaryAxis(), {\n          baseline: ['', 'last']\n        }]\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': scaleAlignPrimaryAxis()\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': [...scaleAlignSecondaryAxis(), 'baseline']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: scaleMargin()\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: scaleMargin()\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: scaleMargin()\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: scaleMargin()\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: scaleMargin()\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: scaleMargin()\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: scaleMargin()\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: scaleMargin()\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: scaleMargin()\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-x': [{\n        'space-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-y': [{\n        'space-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // --------------\n      // --- Sizing ---\n      // --------------\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n       */\n      size: [{\n        size: scaleSizing()\n      }],\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: [themeContainer, 'screen', ...scaleSizing()]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [themeContainer, 'screen', /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'none', ...scaleSizing()]\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [themeContainer, 'screen', 'none', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'prose', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        {\n          screen: [themeBreakpoint]\n        }, ...scaleSizing()]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: ['screen', 'lh', ...scaleSizing()]\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': ['screen', 'lh', 'none', ...scaleSizing()]\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': ['screen', 'lh', ...scaleSizing()]\n      }],\n      // ------------------\n      // --- Typography ---\n      // ------------------\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\n       * Font Stretch\n       * @see https://tailwindcss.com/docs/font-stretch\n       */\n      'font-stretch': [{\n        'font-stretch': ['ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded', isPercent, isArbitraryValue]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: [themeTracking, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: [/** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        themeLeading, ...scaleUnambiguousSpacing()]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://v3.tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: scaleColor()\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: scaleColor()\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...scaleLineStyle(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: [isNumber, 'from-font', 'auto', isArbitraryVariable, isArbitraryLength]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: scaleColor()\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Overflow Wrap\n       * @see https://tailwindcss.com/docs/overflow-wrap\n       */\n      wrap: [{\n        wrap: ['break-word', 'anywhere', 'normal']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -------------------\n      // --- Backgrounds ---\n      // -------------------\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: scaleBgPosition()\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: scaleBgRepeat()\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: scaleBgSize()\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          linear: [{\n            to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n          }, isInteger, isArbitraryVariable, isArbitraryValue],\n          radial: ['', isArbitraryVariable, isArbitraryValue],\n          conic: [isInteger, isArbitraryVariable, isArbitraryValue]\n        }, isArbitraryVariableImage, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: scaleColor()\n      }],\n      // ---------------\n      // --- Borders ---\n      // ---------------\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: scaleRadius()\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': scaleRadius()\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': scaleRadius()\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': scaleRadius()\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': scaleRadius()\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': scaleRadius()\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': scaleRadius()\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': scaleRadius()\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': scaleRadius()\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': scaleRadius()\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': scaleRadius()\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': scaleRadius()\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: scaleBorderWidth()\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': scaleBorderWidth()\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-x': [{\n        'divide-x': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-y': [{\n        'divide-y': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n       */\n      'divide-style': [{\n        divide: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: scaleColor()\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': scaleColor()\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': scaleColor()\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': scaleColor()\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': scaleColor()\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': scaleColor()\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': scaleColor()\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': scaleColor()\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': scaleColor()\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: scaleColor()\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: [...scaleLineStyle(), 'none', 'hidden']\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: scaleColor()\n      }],\n      // ---------------\n      // --- Effects ---\n      // ---------------\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n       */\n      'shadow-color': [{\n        shadow: scaleColor()\n      }],\n      /**\n       * Inset Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n       */\n      'inset-shadow': [{\n        'inset-shadow': ['none', themeInsetShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Inset Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n       */\n      'inset-shadow-color': [{\n        'inset-shadow': scaleColor()\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n       */\n      'ring-w': [{\n        ring: scaleBorderWidth()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n       */\n      'ring-color': [{\n        ring: scaleColor()\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://v3.tailwindcss.com/docs/ring-offset-width\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isNumber, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://v3.tailwindcss.com/docs/ring-offset-color\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-offset-color': [{\n        'ring-offset': scaleColor()\n      }],\n      /**\n       * Inset Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n       */\n      'inset-ring-w': [{\n        'inset-ring': scaleBorderWidth()\n      }],\n      /**\n       * Inset Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n       */\n      'inset-ring-color': [{\n        'inset-ring': scaleColor()\n      }],\n      /**\n       * Text Shadow\n       * @see https://tailwindcss.com/docs/text-shadow\n       */\n      'text-shadow': [{\n        'text-shadow': ['none', themeTextShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Text Shadow Color\n       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n       */\n      'text-shadow-color': [{\n        'text-shadow': scaleColor()\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': scaleBlendMode()\n      }],\n      /**\n       * Mask Clip\n       * @see https://tailwindcss.com/docs/mask-clip\n       */\n      'mask-clip': [{\n        'mask-clip': ['border', 'padding', 'content', 'fill', 'stroke', 'view']\n      }, 'mask-no-clip'],\n      /**\n       * Mask Composite\n       * @see https://tailwindcss.com/docs/mask-composite\n       */\n      'mask-composite': [{\n        mask: ['add', 'subtract', 'intersect', 'exclude']\n      }],\n      /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */\n      'mask-image-linear-pos': [{\n        'mask-linear': [isNumber]\n      }],\n      'mask-image-linear-from-pos': [{\n        'mask-linear-from': scaleMaskImagePosition()\n      }],\n      'mask-image-linear-to-pos': [{\n        'mask-linear-to': scaleMaskImagePosition()\n      }],\n      'mask-image-linear-from-color': [{\n        'mask-linear-from': scaleColor()\n      }],\n      'mask-image-linear-to-color': [{\n        'mask-linear-to': scaleColor()\n      }],\n      'mask-image-t-from-pos': [{\n        'mask-t-from': scaleMaskImagePosition()\n      }],\n      'mask-image-t-to-pos': [{\n        'mask-t-to': scaleMaskImagePosition()\n      }],\n      'mask-image-t-from-color': [{\n        'mask-t-from': scaleColor()\n      }],\n      'mask-image-t-to-color': [{\n        'mask-t-to': scaleColor()\n      }],\n      'mask-image-r-from-pos': [{\n        'mask-r-from': scaleMaskImagePosition()\n      }],\n      'mask-image-r-to-pos': [{\n        'mask-r-to': scaleMaskImagePosition()\n      }],\n      'mask-image-r-from-color': [{\n        'mask-r-from': scaleColor()\n      }],\n      'mask-image-r-to-color': [{\n        'mask-r-to': scaleColor()\n      }],\n      'mask-image-b-from-pos': [{\n        'mask-b-from': scaleMaskImagePosition()\n      }],\n      'mask-image-b-to-pos': [{\n        'mask-b-to': scaleMaskImagePosition()\n      }],\n      'mask-image-b-from-color': [{\n        'mask-b-from': scaleColor()\n      }],\n      'mask-image-b-to-color': [{\n        'mask-b-to': scaleColor()\n      }],\n      'mask-image-l-from-pos': [{\n        'mask-l-from': scaleMaskImagePosition()\n      }],\n      'mask-image-l-to-pos': [{\n        'mask-l-to': scaleMaskImagePosition()\n      }],\n      'mask-image-l-from-color': [{\n        'mask-l-from': scaleColor()\n      }],\n      'mask-image-l-to-color': [{\n        'mask-l-to': scaleColor()\n      }],\n      'mask-image-x-from-pos': [{\n        'mask-x-from': scaleMaskImagePosition()\n      }],\n      'mask-image-x-to-pos': [{\n        'mask-x-to': scaleMaskImagePosition()\n      }],\n      'mask-image-x-from-color': [{\n        'mask-x-from': scaleColor()\n      }],\n      'mask-image-x-to-color': [{\n        'mask-x-to': scaleColor()\n      }],\n      'mask-image-y-from-pos': [{\n        'mask-y-from': scaleMaskImagePosition()\n      }],\n      'mask-image-y-to-pos': [{\n        'mask-y-to': scaleMaskImagePosition()\n      }],\n      'mask-image-y-from-color': [{\n        'mask-y-from': scaleColor()\n      }],\n      'mask-image-y-to-color': [{\n        'mask-y-to': scaleColor()\n      }],\n      'mask-image-radial': [{\n        'mask-radial': [isArbitraryVariable, isArbitraryValue]\n      }],\n      'mask-image-radial-from-pos': [{\n        'mask-radial-from': scaleMaskImagePosition()\n      }],\n      'mask-image-radial-to-pos': [{\n        'mask-radial-to': scaleMaskImagePosition()\n      }],\n      'mask-image-radial-from-color': [{\n        'mask-radial-from': scaleColor()\n      }],\n      'mask-image-radial-to-color': [{\n        'mask-radial-to': scaleColor()\n      }],\n      'mask-image-radial-shape': [{\n        'mask-radial': ['circle', 'ellipse']\n      }],\n      'mask-image-radial-size': [{\n        'mask-radial': [{\n          closest: ['side', 'corner'],\n          farthest: ['side', 'corner']\n        }]\n      }],\n      'mask-image-radial-pos': [{\n        'mask-radial-at': scalePosition()\n      }],\n      'mask-image-conic-pos': [{\n        'mask-conic': [isNumber]\n      }],\n      'mask-image-conic-from-pos': [{\n        'mask-conic-from': scaleMaskImagePosition()\n      }],\n      'mask-image-conic-to-pos': [{\n        'mask-conic-to': scaleMaskImagePosition()\n      }],\n      'mask-image-conic-from-color': [{\n        'mask-conic-from': scaleColor()\n      }],\n      'mask-image-conic-to-color': [{\n        'mask-conic-to': scaleColor()\n      }],\n      /**\n       * Mask Mode\n       * @see https://tailwindcss.com/docs/mask-mode\n       */\n      'mask-mode': [{\n        mask: ['alpha', 'luminance', 'match']\n      }],\n      /**\n       * Mask Origin\n       * @see https://tailwindcss.com/docs/mask-origin\n       */\n      'mask-origin': [{\n        'mask-origin': ['border', 'padding', 'content', 'fill', 'stroke', 'view']\n      }],\n      /**\n       * Mask Position\n       * @see https://tailwindcss.com/docs/mask-position\n       */\n      'mask-position': [{\n        mask: scaleBgPosition()\n      }],\n      /**\n       * Mask Repeat\n       * @see https://tailwindcss.com/docs/mask-repeat\n       */\n      'mask-repeat': [{\n        mask: scaleBgRepeat()\n      }],\n      /**\n       * Mask Size\n       * @see https://tailwindcss.com/docs/mask-size\n       */\n      'mask-size': [{\n        mask: scaleBgSize()\n      }],\n      /**\n       * Mask Type\n       * @see https://tailwindcss.com/docs/mask-type\n       */\n      'mask-type': [{\n        'mask-type': ['alpha', 'luminance']\n      }],\n      /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */\n      'mask-image': [{\n        mask: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ---------------\n      // --- Filters ---\n      // ---------------\n      /**\n       * Filter\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: scaleBlur()\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeDropShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Drop Shadow Color\n       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n       */\n      'drop-shadow-color': [{\n        'drop-shadow': scaleColor()\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Filter\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': scaleBlur()\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      // --------------\n      // --- Tables ---\n      // --------------\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // ---------------------------------\n      // --- Transitions and Animation ---\n      // ---------------------------------\n      /**\n       * Transition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['', 'all', 'colors', 'opacity', 'shadow', 'transform', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Behavior\n       * @see https://tailwindcss.com/docs/transition-behavior\n       */\n      'transition-behavior': [{\n        transition: ['normal', 'discrete']\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------\n      // --- Transforms ---\n      // ------------------\n      /**\n       * Backface Visibility\n       * @see https://tailwindcss.com/docs/backface-visibility\n       */\n      backface: [{\n        backface: ['hidden', 'visible']\n      }],\n      /**\n       * Perspective\n       * @see https://tailwindcss.com/docs/perspective\n       */\n      perspective: [{\n        perspective: [themePerspective, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Perspective Origin\n       * @see https://tailwindcss.com/docs/perspective-origin\n       */\n      'perspective-origin': [{\n        'perspective-origin': scalePositionWithArbitrary()\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: scaleRotate()\n      }],\n      /**\n       * Rotate X\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-x': [{\n        'rotate-x': scaleRotate()\n      }],\n      /**\n       * Rotate Y\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-y': [{\n        'rotate-y': scaleRotate()\n      }],\n      /**\n       * Rotate Z\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-z': [{\n        'rotate-z': scaleRotate()\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: scaleScale()\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': scaleScale()\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': scaleScale()\n      }],\n      /**\n       * Scale Z\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-z': [{\n        'scale-z': scaleScale()\n      }],\n      /**\n       * Scale 3D\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-3d': ['scale-3d'],\n      /**\n       * Skew\n       * @see https://tailwindcss.com/docs/skew\n       */\n      skew: [{\n        skew: scaleSkew()\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': scaleSkew()\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': scaleSkew()\n      }],\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu']\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: scalePositionWithArbitrary()\n      }],\n      /**\n       * Transform Style\n       * @see https://tailwindcss.com/docs/transform-style\n       */\n      'transform-style': [{\n        transform: ['3d', 'flat']\n      }],\n      /**\n       * Translate\n       * @see https://tailwindcss.com/docs/translate\n       */\n      translate: [{\n        translate: scaleTranslate()\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': scaleTranslate()\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': scaleTranslate()\n      }],\n      /**\n       * Translate Z\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-z': [{\n        'translate-z': scaleTranslate()\n      }],\n      /**\n       * Translate None\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-none': ['translate-none'],\n      // ---------------------\n      // --- Interactivity ---\n      // ---------------------\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: scaleColor()\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: scaleColor()\n      }],\n      /**\n       * Color Scheme\n       * @see https://tailwindcss.com/docs/color-scheme\n       */\n      'color-scheme': [{\n        scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Field Sizing\n       * @see https://tailwindcss.com/docs/field-sizing\n       */\n      'field-sizing': [{\n        'field-sizing': ['fixed', 'content']\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['auto', 'none']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', '', 'y', 'x']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -----------\n      // --- SVG ---\n      // -----------\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: ['none', ...scaleColor()]\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isNumber, isArbitraryVariableLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: ['none', ...scaleColor()]\n      }],\n      // ---------------------\n      // --- Accessibility ---\n      // ---------------------\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-x', 'border-w-y', 'border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-x', 'border-color-y', 'border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      translate: ['translate-x', 'translate-y', 'translate-none'],\n      'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    },\n    orderSensitiveModifiers: ['*', '**', 'after', 'backdrop', 'before', 'details-content', 'file', 'first-letter', 'first-line', 'marker', 'placeholder', 'selection']\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  overrideConfigProperties(baseConfig.theme, override.theme);\n  overrideConfigProperties(baseConfig.classGroups, override.classGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);\n  overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);\n  mergeConfigProperties(baseConfig.theme, extend.theme);\n  mergeConfigProperties(baseConfig.classGroups, extend.classGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);\n  mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      mergeArrayProperties(baseObject, mergeObject, key);\n    }\n  }\n};\nconst mergeArrayProperties = (baseObject, mergeObject, key) => {\n  const mergeValue = mergeObject[key];\n  if (mergeValue !== undefined) {\n    baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };\n//# sourceMappingURL=bundle-mjs.mjs.map\n"],"names":["setRef","ref","value","current","composeRefs","refs","hasCleanup","cleanups","map","cleanup","node","i","length","useComposedRefs","react__WEBPACK_IMPORTED_MODULE_0__","useCallback","createSlot","ownerName","SlotClone","createSlotClone","forwardRef","props","forwardedRef","children","slotProps","isValidElement","getter","mayWarn","childrenRef","Object","getOwnPropertyDescriptor","element","get","isReactWarning","props2","mergeProps","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","result","filter","Boolean","join","type","Fragment","_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__","F","cloneElement","Children","count","only","displayName","Slot2","childrenArray","toArray","slottable","find","isSlottable","newElement","newChildren","child","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","Slot","SLOTTABLE_IDENTIFIER","Symbol","createSlottable","Slottable2","__radixId","clsx","e","t","f","n","o","arguments","r","Array","isArray","createClassGroupUtils","config","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","classGroupFromNextClassPart","slice","undefined","validators","classRest","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","classGroups","Map","processClassesRecursively","classGroup","forEach","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","entries","key","path","currentClassPartObject","pathPart","has","set","func","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","createParseClassName","prefix","experimentalParseClassName","parseClassName","postfixModifierPosition","modifiers","bracketDepth","parenDepth","modifierStart","index","currentCharacter","baseClassNameWithImportantModifier","baseClassName","stripImportantModifier","hasImportantModifier","maybePostfixModifierPosition","fullPrefix","parseClassNameOriginal","startsWith","isExternal","endsWith","createSortModifiers","orderSensitiveModifiers","fromEntries","modifier","sortedModifiers","unsortedModifiers","sort","createConfigUtils","sortModifiers","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","classNames","trim","originalClassName","variantModifier","modifierId","classId","includes","conflictGroups","group","twJoin","argument","resolvedValue","string","toValue","mix","k","fromTheme","themeGetter","arbitraryValueRegex","arbitraryVariableRegex","fractionRegex","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isFraction","isNumber","Number","isNaN","isInteger","isPercent","isTshirtSize","isAny","isLengthOnly","isNever","isShadow","isImage","isAnyNonArbitrary","isArbitraryValue","isArbitraryVariable","isArbitrarySize","getIsArbitraryValue","isLabelSize","isArbitraryLength","isLabelLength","isArbitraryNumber","isLabelNumber","isArbitraryPosition","isLabelPosition","isArbitraryImage","isLabelImage","isArbitraryShadow","isLabelShadow","isArbitraryVariableLength","getIsArbitraryVariable","isArbitraryVariableFamilyName","isLabelFamilyName","isArbitraryVariablePosition","isArbitraryVariableSize","isArbitraryVariableImage","isArbitraryVariableShadow","testLabel","testValue","shouldMatchNoLabel","label","toStringTag","twMerge","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","apply","themeColor","themeFont","themeText","themeFontWeight","themeTracking","themeLeading","themeBreakpoint","themeContainer","themeSpacing","themeRadius","themeShadow","themeInsetShadow","themeTextShadow","themeDropShadow","themeBlur","themePerspective","themeAspect","themeEase","themeAnimate","scaleBreak","scalePosition","scalePositionWithArbitrary","scaleOverflow","scaleOverscroll","scaleUnambiguousSpacing","scaleInset","scaleGridTemplateColsRows","scaleGridColRowStartAndEnd","span","scaleGridColRowStartOrEnd","scaleGridAutoColsRows","scaleAlignPrimaryAxis","scaleAlignSecondaryAxis","scaleMargin","scaleSizing","scaleColor","scaleBgPosition","position","scaleBgRepeat","repeat","scaleBgSize","size","scaleGradientStopPosition","scaleRadius","scaleBorderWidth","scaleLineStyle","scaleBlendMode","scaleMaskImagePosition","scaleBlur","scaleRotate","scaleScale","scaleSkew","scaleTranslate","animate","aspect","blur","breakpoint","color","container","ease","font","leading","perspective","radius","shadow","spacing","text","tracking","columns","box","display","sr","float","clear","isolation","object","overflow","overscroll","inset","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","row","gap","justify","content","items","baseline","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","list","placeholder","decoration","indent","align","whitespace","break","wrap","hyphens","bg","linear","to","radial","conic","from","via","rounded","border","divide","outline","ring","opacity","mask","closest","farthest","brightness","contrast","grayscale","invert","saturate","sepia","table","caption","transition","duration","delay","backface","rotate","scale","skew","transform","origin","translate","accent","appearance","caret","scheme","cursor","resize","scroll","snap","touch","select","fill","stroke"],"sourceRoot":""}