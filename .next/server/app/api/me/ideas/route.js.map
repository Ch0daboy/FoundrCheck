{"version":3,"file":"app/api/me/ideas/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/api/me/ideas/route.ts","webpack://_N_E/./app/api/me/ideas/route.ts?e824","webpack://_N_E/?04f6","webpack://_N_E/./lib/auth.ts","webpack://_N_E/./lib/env.ts"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { getSessionUserId } from \"@/lib/auth\";\nimport { env as getEnv } from \"@/lib/env\";\n\nexport const runtime = \"edge\";\n\nexport async function GET(req: Request) {\n  const env = getEnv();\n  const userId = await getSessionUserId(env, req);\n  if (!userId) return new Response(\"Unauthorized\", { status: 401 });\n\n  const res = await env.DB.prepare(\n    `SELECT * FROM ideas WHERE owner_id = ? ORDER BY created_at DESC`\n  ).bind(userId).all();\n  return new Response(JSON.stringify(res.results ?? []), { status: 200 });\n}\n\n\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/home/noob/FoundrCheck/app/api/me/ideas/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/me/ideas/route\",\n        pathname: \"/api/me/ideas\",\n        filename: \"route\",\n        bundlePath: \"app/api/me/ideas/route\"\n    },\n    resolvedPagePath: \"/home/noob/FoundrCheck/app/api/me/ideas/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/me/ideas/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fme%2Fideas%2Froute&page=%2Fapi%2Fme%2Fideas%2Froute&pagePath=private-next-app-dir%2Fapi%2Fme%2Fideas%2Froute.ts&appDir=%2Fhome%2Fnoob%2FFoundrCheck%2Fapp&appPaths=%2Fapi%2Fme%2Fideas%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/me/ideas/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","import { Lucia } from \"lucia\";\nimport { D1Adapter } from \"@lucia-auth/adapter-sqlite\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ntype Bindings = {\n  DB: D1Database;\n};\n\nexport function getAuth(env: Bindings) {\n  const adapter = new D1Adapter(env.DB, {\n    user: \"users\",\n    session: \"sessions\",\n    key: \"user_keys\",\n  });\n  const auth = new Lucia(adapter, {\n    sessionCookie: {\n      name: SESSION_COOKIE_NAME,\n      attributes: { secure: true, httpOnly: true, sameSite: \"lax\", path: \"/\" },\n    },\n    getUserAttributes: (data) => ({ email: (data as any).email }),\n  });\n  return auth;\n}\n\nexport async function createUser(env: Bindings, email: string, hashedPassword: string) {\n  const id = uuidv4();\n  const auth = getAuth(env);\n  await auth.createUser({\n    userId: id,\n    key: {\n      providerId: \"email\",\n      providerUserId: email,\n      password: hashedPassword,\n    },\n    attributes: { email },\n  });\n  // minimal profile row\n  await env.DB.prepare(\"INSERT OR IGNORE INTO user_profiles (id, email) VALUES (?, ?)\").bind(id, email).run();\n  return id;\n}\n\nexport async function verifyEmailPassword(env: Bindings, email: string, hashedPassword: string): Promise<string | null> {\n  const keyId = `email:${email}`;\n  const res = await env.DB.prepare(\n    `SELECT user_id, hashed_password FROM user_keys WHERE id = ?`\n  ).bind(keyId).all();\n  const row = res.results?.[0] as any;\n  if (!row) return null;\n  if (row.hashed_password !== hashedPassword) return null;\n  return row.user_id as string;\n}\n\nexport const SESSION_COOKIE_NAME = \"fc_session\";\n\nexport function getCookie(req: Request, name: string): string | null {\n  const cookie = req.headers.get(\"cookie\");\n  if (!cookie) return null;\n  const parts = cookie.split(\";\");\n  for (const part of parts) {\n    const [k, v] = part.trim().split(\"=\");\n    if (k === name) return decodeURIComponent(v ?? \"\");\n  }\n  return null;\n}\n\nexport async function getSessionUserId(env: Bindings, req: Request): Promise<string | null> {\n  const sessionId = getCookie(req, SESSION_COOKIE_NAME);\n  if (!sessionId) return null;\n  const res = await env.DB.prepare(`SELECT user_id, expires_at FROM sessions WHERE id = ?`).bind(sessionId).all();\n  const row = res.results?.[0] as any;\n  if (!row) return null;\n  const now = Math.floor(Date.now() / 1000);\n  const exp = Number(row.expires_at);\n  if (Number.isFinite(exp) && exp < now) return null;\n  return row.user_id as string;\n}\n\n\n","import { getRequestContext } from \"@cloudflare/next-on-pages\";\n\nexport type Bindings = {\n  DB: D1Database;\n  IDEA_QUEUE: Queue;\n  PERPLEXITY_API_KEY: string;\n  PERPLEXITY_MODEL: string;\n  APP_TIMEZONE?: string;\n  RATE_LIMIT_DAILY?: string | number;\n  TURNSTILE_SECRET_KEY?: string;\n  NEXT_PUBLIC_TURNSTILE_SITE_KEY?: string;\n};\n\nexport function env(): Bindings {\n  return getRequestContext().env as unknown as Bindings;\n}\n\n\n"],"names":["module","exports","require","runtime","GET","req","env","getEnv","userId","getSessionUserId","Response","JSON","stringify","res","DB","prepare","bind","all","results","status","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fme_2Fideas_2Froute_ts_page_2Fapi_2Fme_2Fideas_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGbWUlMkZpZGVhcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWUlMkZpZGVhcyUyRnJvdXRlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbWUlMkZpZGVhcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGbm9vYiUyRkZvdW5kckNoZWNrJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRm1lJTJGaWRlYXMlMkZyb3V0ZSZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCE_3D_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap","getAuth","adapter","D1Adapter","user","session","key","Lucia","sessionCookie","name","SESSION_COOKIE_NAME","attributes","secure","httpOnly","sameSite","path","getUserAttributes","email","data","createUser","hashedPassword","id","uuidv4","auth","providerId","providerUserId","password","run","verifyEmailPassword","keyId","row","hashed_password","user_id","sessionId","getCookie","cookie","headers","get","part","split","k","v","trim","decodeURIComponent","now","Math","floor","Date","exp","Number","expires_at","isFinite","getRequestContext"],"sourceRoot":""}