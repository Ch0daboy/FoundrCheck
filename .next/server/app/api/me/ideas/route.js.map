{"version":3,"file":"app/api/me/ideas/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/api/me/ideas/route.ts","webpack://_N_E/./app/api/me/ideas/route.ts?d3a5","webpack://_N_E/?d4e8","webpack://_N_E/./lib/env.ts","webpack://_N_E/./lib/lucia.ts"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { validateRequest } from \"@/lib/lucia\";\nimport { env as getEnv } from \"@/lib/env\";\n\nexport const runtime = \"edge\";\n\nexport async function GET(req: Request) {\n  const env = getEnv();\n  const { user } = await validateRequest(env, req);\n  if (!user) return new Response(\"Unauthorized\", { status: 401 });\n\n  const res = await env.DB.prepare(\n    `SELECT * FROM ideas WHERE owner_id = ? ORDER BY created_at DESC`\n  ).bind(user.id).all();\n  return new Response(JSON.stringify(res.results ?? []), { status: 200 });\n}\n\n\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/home/noob/FoundrCheck/app/api/me/ideas/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/me/ideas/route\",\n        pathname: \"/api/me/ideas\",\n        filename: \"route\",\n        bundlePath: \"app/api/me/ideas/route\"\n    },\n    resolvedPagePath: \"/home/noob/FoundrCheck/app/api/me/ideas/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/me/ideas/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fme%2Fideas%2Froute&page=%2Fapi%2Fme%2Fideas%2Froute&pagePath=private-next-app-dir%2Fapi%2Fme%2Fideas%2Froute.ts&appDir=%2Fhome%2Fnoob%2FFoundrCheck%2Fapp&appPaths=%2Fapi%2Fme%2Fideas%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/me/ideas/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","import { getRequestContext } from \"@cloudflare/next-on-pages\";\n\nexport type Bindings = {\n  DB: D1Database;\n  IDEA_QUEUE: Queue;\n  PERPLEXITY_API_KEY: string;\n  PERPLEXITY_MODEL: string;\n  APP_TIMEZONE?: string;\n  RATE_LIMIT_DAILY?: string | number;\n  TURNSTILE_SECRET_KEY?: string;\n  NEXT_PUBLIC_TURNSTILE_SITE_KEY?: string;\n};\n\nexport function env(): Bindings {\n  return getRequestContext().env as unknown as Bindings;\n}\n\n\n","import { Lucia, TimeSpan } from \"lucia\";\nimport { D1Adapter } from \"@lucia-auth/adapter-sqlite\";\nimport type { Bindings } from \"@/lib/env\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Simple SHA-256 hashing for edge runtime compatibility\nasync function hashPassword(password: string): Promise<string> {\n  const data = new TextEncoder().encode(password);\n  const digest = await crypto.subtle.digest(\"SHA-256\", data);\n  const bytes = Array.from(new Uint8Array(digest));\n  return bytes.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\nasync function verifyPassword(hashedPassword: string, password: string): Promise<boolean> {\n  const hashed = await hashPassword(password);\n  return hashed === hashedPassword;\n}\n\nexport function createLucia(env: Bindings) {\n  const adapter = new D1Adapter(env.DB, { user: \"user\", session: \"session\" });\n  const lucia = new Lucia(adapter, {\n    sessionExpiresIn: new TimeSpan(30, \"d\"),\n    sessionCookie: {\n      name: \"fc_session\",\n      attributes: {\n        sameSite: \"lax\",\n        secure: true,\n        path: \"/\",\n      },\n    },\n  });\n  return lucia;\n}\n\nexport async function validateRequest(env: Bindings, req: Request) {\n  const lucia = createLucia(env);\n  const cookieHeader = req.headers.get(\"cookie\") ?? \"\";\n  const sessionId = lucia.readSessionCookie(cookieHeader);\n  if (!sessionId) return { user: null, session: null } as const;\n  return await lucia.validateSession(sessionId);\n}\n\nexport async function registerWithEmailPassword(env: Bindings, email: string, password: string) {\n  // Ensure email not taken\n  const exists = await env.DB.prepare(\"SELECT id FROM user WHERE email = ?\").bind(email).first();\n  if (exists) throw new Error(\"EMAIL_TAKEN\");\n\n  const userId = uuidv4();\n  await env.DB.prepare(\"INSERT INTO user (id, email) VALUES (?, ?)\").bind(userId, email).run();\n\n  const hashedPassword = await hashPassword(password);\n  const keyId = `email:${email}`;\n  await env.DB.prepare(\"INSERT INTO key (id, user_id, hashed_password) VALUES (?, ?, ?)\")\n    .bind(keyId, userId, hashedPassword)\n    .run();\n\n  await env.DB.prepare(\"INSERT OR IGNORE INTO user_profiles (id, email) VALUES (?, ?)\").bind(userId, email).run();\n\n  const lucia = createLucia(env);\n  const session = await lucia.createSession(userId, {});\n  const cookie = lucia.createSessionCookie(session.id).serialize();\n  return { userId, cookie } as const;\n}\n\nexport async function loginWithEmailPassword(env: Bindings, email: string, password: string) {\n  const keyId = `email:${email}`;\n  const row = await env.DB.prepare(\"SELECT user_id, hashed_password FROM key WHERE id = ?\")\n    .bind(keyId)\n    .first<{ user_id: string; hashed_password: string }>();\n  if (!row) throw new Error(\"INVALID_CREDENTIALS\");\n\n  const ok = await verifyPassword(row.hashed_password, password);\n  if (!ok) throw new Error(\"INVALID_CREDENTIALS\");\n\n  const lucia = createLucia(env);\n  const session = await lucia.createSession(row.user_id, {});\n  const cookie = lucia.createSessionCookie(session.id).serialize();\n  return { userId: row.user_id, cookie } as const;\n}\n\nexport async function logout(env: Bindings, req: Request) {\n  const lucia = createLucia(env);\n  const cookieHeader = req.headers.get(\"cookie\") ?? \"\";\n  const sessionId = lucia.readSessionCookie(cookieHeader);\n  if (sessionId) await lucia.invalidateSession(sessionId);\n  const blank = lucia.createBlankSessionCookie().serialize();\n  return blank;\n}\n\n\n"],"names":["module","exports","require","runtime","GET","req","env","getEnv","user","validateRequest","Response","JSON","stringify","res","DB","prepare","bind","id","all","results","status","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fme_2Fideas_2Froute_ts_page_2Fapi_2Fme_2Fideas_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGbWUlMkZpZGVhcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWUlMkZpZGVhcyUyRnJvdXRlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbWUlMkZpZGVhcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGbm9vYiUyRkZvdW5kckNoZWNrJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRm1lJTJGaWRlYXMlMkZyb3V0ZSZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCE_3D_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap","getRequestContext","hashPassword","password","data","TextEncoder","encode","bytes","from","Uint8Array","crypto","subtle","digest","map","b","toString","padStart","join","verifyPassword","hashedPassword","hashed","createLucia","adapter","D1Adapter","session","Lucia","sessionExpiresIn","TimeSpan","sessionCookie","name","attributes","sameSite","secure","path","lucia","cookieHeader","headers","get","sessionId","readSessionCookie","validateSession","registerWithEmailPassword","email","first","userId","uuidv4","run","keyId","createSession","cookie","createSessionCookie","serialize","loginWithEmailPassword","row","hashed_password","user_id","logout","invalidateSession","createBlankSessionCookie"],"sourceRoot":""}