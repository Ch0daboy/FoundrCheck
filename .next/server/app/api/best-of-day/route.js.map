{"version":3,"file":"app/api/best-of-day/route.js","mappings":"oFAAAA,CAAAA,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,sWEGO,IAAMC,EAAU,OAEhB,eAAeC,EAAIC,CAAY,EACpC,IAAMC,EAAMC,CAAAA,EAAAA,EAAAA,CAAAA,IAGN,CAAEC,SAAAA,CAAQ,CAAEC,OAAAA,CAAM,CAAE,CAAGC,SDTDC,EAAa,qBAAqB,EAC9D,IAAMC,EAAM,IAAIC,KAUVC,EAAQC,IAPEC,KAAKC,cAAc,CAAC,QAAS,CAC3CC,SAAUP,EACVQ,KAAM,UACNC,MAAO,UACPC,IAAK,SACP,GAEkBC,aAAa,CAACV,GAC1BO,EAAOI,OAAOT,EAAMU,IAAI,CAAC,GAAOC,SAAAA,EAAEC,IAAI,GAAcC,OACpDP,EAAQG,OAAOT,EAAMU,IAAI,CAAC,GAAOC,UAAAA,EAAEC,IAAI,GAAeC,OAAS,EAC/DN,EAAME,OAAOT,EAAMU,IAAI,CAAC,GAAOC,QAAAA,EAAEC,IAAI,GAAaC,OAGlDC,EAAa,IAAIf,KAAKM,EAAMC,EAAOC,GAGxB,IAAIL,KAAKC,cAAc,CAAC,QAAS,CAChDC,SAAUP,EACVQ,KAAM,UACNC,MAAO,UACPC,IAAK,UACLQ,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,EACV,GAGA,IAAMC,EAAW,IAAIpB,KAAKM,EAAMC,EAAOC,EAAK,GAAI,GAAI,IAMpD,MAAO,CAAEb,SAHQoB,EAAWM,WAAW,GAGpBzB,OAFJwB,EAASC,WAAW,EAET,CAC5B,EC/BaC,IADKC,IAAI/B,EAAI8B,GAAG,EACZE,YAAY,CAACC,GAAG,CAAC,OAAShC,EAAIiC,YAAY,EAAI,uBAEvDC,EAAM,MAAMlC,EAAImC,EAAE,CAACC,OAAO,CAC9B,qMACAC,IAAI,CAACnC,EAAUC,GAAQmC,GAAG,GAE5B,OAAO,IAAIC,SAASC,KAAKC,SAAS,CADtBP,EAAIQ,OAAO,EAAE,CAAC,EAAE,EAAI,MACS,CAAEC,OAAQ,GAAI,EACzD,CCRA,IAAAC,EAAA,IAAwBC,EAAAC,mBAAmB,EAC3CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,SAAA,CACvBC,KAAA,yBACAC,SAAA,mBACAC,SAAA,QACAC,WAAA,2BACA,EACAC,iBAAA,sDACAC,iBAVA,GAWAC,SAAYC,CACZ,GAIA,CAAQC,oBAAAA,CAAA,CAAAC,6BAAAA,CAAA,CAAAC,YAAAA,CAAA,EAAiElB,EACzEmB,EAAA,yBACA,SAAAC,IACA,MAAW,GAAAC,EAAAC,EAAA,EAAW,CACtBJ,YAAAA,EACAD,6BAAAA,CACA,EACA,CC1BO,IAAAM,EAAqBC,EAC5BC,EAAeC,EAAAC,CAAsB,CAAAC,IAAA,CAAM5B,+DCSpC,SAAS5C,IACd,MAAOyE,CAAAA,EAAAA,EAAAA,iBAAAA,IAAoBzE,GAAG,AAChC","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./lib/tz.ts","webpack://_N_E/./app/api/best-of-day/route.ts","webpack://_N_E/./app/api/best-of-day/route.ts?565f","webpack://_N_E/?cc99","webpack://_N_E/./lib/env.ts"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","export function laTodayWindow(tz: string = \"America/Los_Angeles\") {\n  const now = new Date();\n  \n  // Get today's date in the target timezone\n  const fmt = new Intl.DateTimeFormat(\"en-US\", {\n    timeZone: tz,\n    year: \"numeric\",\n    month: \"2-digit\", \n    day: \"2-digit\",\n  });\n  \n  const parts = fmt.formatToParts(now);\n  const year = Number(parts.find((p) => p.type === \"year\")?.value);\n  const month = Number(parts.find((p) => p.type === \"month\")?.value) - 1;\n  const day = Number(parts.find((p) => p.type === \"day\")?.value);\n\n  // Create start of day (midnight) in the target timezone\n  const startOfDay = new Date(year, month, day);\n  \n  // Format the start of day in the target timezone to get the correct UTC time\n  const startFmt = new Intl.DateTimeFormat(\"en-US\", {\n    timeZone: tz,\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: false,\n  });\n  \n  // Create end of day (23:59:59) in the target timezone\n  const endOfDay = new Date(year, month, day, 23, 59, 59);\n  \n  // Convert to UTC ISO strings\n  const startIso = startOfDay.toISOString();\n  const endIso = endOfDay.toISOString();\n  \n  return { startIso, endIso };\n}\n\n\n","import { laTodayWindow } from \"@/lib/tz\";\nimport { env as getEnv } from \"@/lib/env\";\n\nexport const runtime = \"edge\";\n\nexport async function GET(req: Request) {\n  const env = getEnv();\n  const url = new URL(req.url);\n  const tz = url.searchParams.get(\"tz\") || env.APP_TIMEZONE || \"America/Los_Angeles\";\n  const { startIso, endIso } = laTodayWindow(tz);\n  const res = await env.DB.prepare(\n    `SELECT id, title, score, analysis_summary, created_at FROM ideas WHERE score IS NOT NULL AND datetime(created_at) BETWEEN datetime(?) AND datetime(?) ORDER BY score DESC, created_at ASC LIMIT 1`\n  ).bind(startIso, endIso).all();\n  const row = res.results?.[0] ?? null;\n  return new Response(JSON.stringify(row), { status: 200 });\n}\n\n\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/home/noob/FoundrCheck/app/api/best-of-day/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/best-of-day/route\",\n        pathname: \"/api/best-of-day\",\n        filename: \"route\",\n        bundlePath: \"app/api/best-of-day/route\"\n    },\n    resolvedPagePath: \"/home/noob/FoundrCheck/app/api/best-of-day/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/best-of-day/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fbest-of-day%2Froute&page=%2Fapi%2Fbest-of-day%2Froute&pagePath=private-next-app-dir%2Fapi%2Fbest-of-day%2Froute.ts&appDir=%2Fhome%2Fnoob%2FFoundrCheck%2Fapp&appPaths=%2Fapi%2Fbest-of-day%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/best-of-day/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","import { getRequestContext } from \"@cloudflare/next-on-pages\";\n\nexport type Bindings = {\n  DB: D1Database;\n  IDEA_QUEUE: Queue;\n  PERPLEXITY_API_KEY: string;\n  PERPLEXITY_MODEL: string;\n  APP_TIMEZONE?: string;\n  RATE_LIMIT_DAILY?: string | number;\n  TURNSTILE_SECRET_KEY?: string;\n  NEXT_PUBLIC_TURNSTILE_SITE_KEY?: string;\n};\n\nexport function env(): Bindings {\n  return getRequestContext().env as unknown as Bindings;\n}\n\n\n"],"names":["module","exports","require","runtime","GET","req","env","getEnv","startIso","endIso","laTodayWindow","tz","now","Date","parts","fmt","Intl","DateTimeFormat","timeZone","year","month","day","formatToParts","Number","find","p","type","value","startOfDay","hour","minute","second","hour12","endOfDay","toISOString","url","URL","searchParams","get","APP_TIMEZONE","res","DB","prepare","bind","all","Response","JSON","stringify","results","status","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fbest_of_day_2Froute_ts_page_2Fapi_2Fbest_of_day_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGYmVzdC1vZi1kYXklMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmJlc3Qtb2YtZGF5JTJGcm91dGUmcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZiZXN0LW9mLWRheSUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGbm9vYiUyRkZvdW5kckNoZWNrJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRmJlc3Qtb2YtZGF5JTJGcm91dGUmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0Qh_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap","getRequestContext"],"sourceRoot":""}