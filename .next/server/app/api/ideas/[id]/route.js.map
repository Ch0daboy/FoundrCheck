{"version":3,"file":"app/api/ideas/[id]/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./lib/sanitize.ts","webpack://_N_E/./app/api/ideas/[id]/route.ts","webpack://_N_E/./app/api/ideas/[id]/route.ts?7d7f","webpack://_N_E/?09af","webpack://_N_E/./lib/auth.ts","webpack://_N_E/./lib/env.ts"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","export type IdeaRow = {\n  id: string;\n  owner_id: string;\n  title: string;\n  description: string;\n  idea_hash: string;\n  visibility: string;\n  status: string;\n  score: number | null;\n  analysis_summary: string | null;\n  analysis_raw: string | null;\n  created_at: string;\n  updated_at: string;\n};\n\nexport function sanitizeIdea(row: IdeaRow, viewerId: string | null) {\n  const isOwner = viewerId && row.owner_id === viewerId;\n  return {\n    id: row.id,\n    owner_id: isOwner ? row.owner_id : undefined,\n    title: row.title,\n    description: row.description,\n    idea_hash: isOwner ? row.idea_hash : undefined,\n    visibility: row.visibility,\n    status: row.status,\n    score: row.score,\n    analysis_summary: row.analysis_summary,\n    analysis_raw: isOwner ? row.analysis_raw : undefined,\n    created_at: row.created_at,\n    updated_at: row.updated_at,\n    owner_anon: !isOwner,\n  };\n}\n\n\n","import { getSessionUserId } from \"@/lib/auth\";\nimport { sanitizeIdea } from \"@/lib/sanitize\";\nimport { env as getEnv } from \"@/lib/env\";\n\nexport const runtime = \"edge\";\n\nexport async function GET(_req: Request, ctx: { params: { id: string } }) {\n  const env = getEnv();\n  const id = ctx.params.id;\n  const viewerId = await getSessionUserId(env, _req);\n\n  const res = await env.DB.prepare(`SELECT * FROM ideas WHERE id = ?`).bind(id).all();\n  if (!res.results?.length) return new Response(\"Not found\", { status: 404 });\n  const row = res.results[0] as any;\n  const sanitized = sanitizeIdea(row, viewerId);\n  return new Response(JSON.stringify(sanitized), { status: 200 });\n}\n\n\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/home/noob/FoundrCheck/app/api/ideas/[id]/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/ideas/[id]/route\",\n        pathname: \"/api/ideas/[id]\",\n        filename: \"route\",\n        bundlePath: \"app/api/ideas/[id]/route\"\n    },\n    resolvedPagePath: \"/home/noob/FoundrCheck/app/api/ideas/[id]/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/ideas/[id]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fideas%2F%5Bid%5D%2Froute&page=%2Fapi%2Fideas%2F%5Bid%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2Fideas%2F%5Bid%5D%2Froute.ts&appDir=%2Fhome%2Fnoob%2FFoundrCheck%2Fapp&appPaths=%2Fapi%2Fideas%2F%5Bid%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/ideas/[id]/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","import { Lucia } from \"lucia\";\nimport { D1Adapter } from \"@lucia-auth/adapter-sqlite\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ntype Bindings = {\n  DB: D1Database;\n};\n\nexport function getAuth(env: Bindings) {\n  const adapter = new D1Adapter(env.DB, {\n    user: \"users\",\n    session: \"sessions\",\n    key: \"user_keys\",\n  });\n  const auth = new Lucia(adapter, {\n    sessionCookie: {\n      name: SESSION_COOKIE_NAME,\n      attributes: { secure: true, httpOnly: true, sameSite: \"lax\", path: \"/\" },\n    },\n    getUserAttributes: (data) => ({ email: (data as any).email }),\n  });\n  return auth;\n}\n\nexport async function createUser(env: Bindings, email: string, hashedPassword: string) {\n  const id = uuidv4();\n  const auth = getAuth(env);\n  await auth.createUser({\n    userId: id,\n    key: {\n      providerId: \"email\",\n      providerUserId: email,\n      password: hashedPassword,\n    },\n    attributes: { email },\n  });\n  // minimal profile row\n  await env.DB.prepare(\"INSERT OR IGNORE INTO user_profiles (id, email) VALUES (?, ?)\").bind(id, email).run();\n  return id;\n}\n\nexport async function verifyEmailPassword(env: Bindings, email: string, hashedPassword: string): Promise<string | null> {\n  const keyId = `email:${email}`;\n  const res = await env.DB.prepare(\n    `SELECT user_id, hashed_password FROM user_keys WHERE id = ?`\n  ).bind(keyId).all();\n  const row = res.results?.[0] as any;\n  if (!row) return null;\n  if (row.hashed_password !== hashedPassword) return null;\n  return row.user_id as string;\n}\n\nexport const SESSION_COOKIE_NAME = \"fc_session\";\n\nexport function getCookie(req: Request, name: string): string | null {\n  const cookie = req.headers.get(\"cookie\");\n  if (!cookie) return null;\n  const parts = cookie.split(\";\");\n  for (const part of parts) {\n    const [k, v] = part.trim().split(\"=\");\n    if (k === name) return decodeURIComponent(v ?? \"\");\n  }\n  return null;\n}\n\nexport async function getSessionUserId(env: Bindings, req: Request): Promise<string | null> {\n  const sessionId = getCookie(req, SESSION_COOKIE_NAME);\n  if (!sessionId) return null;\n  const res = await env.DB.prepare(`SELECT user_id, expires_at FROM sessions WHERE id = ?`).bind(sessionId).all();\n  const row = res.results?.[0] as any;\n  if (!row) return null;\n  const now = Math.floor(Date.now() / 1000);\n  const exp = Number(row.expires_at);\n  if (Number.isFinite(exp) && exp < now) return null;\n  return row.user_id as string;\n}\n\n\n","import { getRequestContext } from \"@cloudflare/next-on-pages\";\n\nexport type Bindings = {\n  DB: D1Database;\n  IDEA_QUEUE: Queue;\n  PERPLEXITY_API_KEY: string;\n  PERPLEXITY_MODEL: string;\n  APP_TIMEZONE?: string;\n  RATE_LIMIT_DAILY?: string | number;\n  TURNSTILE_SECRET_KEY?: string;\n  NEXT_PUBLIC_TURNSTILE_SITE_KEY?: string;\n};\n\nexport function env(): Bindings {\n  return getRequestContext().env as unknown as Bindings;\n}\n\n\n"],"names":["module","exports","require","runtime","GET","_req","ctx","env","getEnv","id","params","viewerId","getSessionUserId","res","DB","prepare","bind","all","results","length","Response","JSON","stringify","sanitizeIdea","row","isOwner","owner_id","undefined","title","description","idea_hash","visibility","status","score","analysis_summary","analysis_raw","created_at","updated_at","owner_anon","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fideas_2F_5Bid_5D_2Froute_ts_page_2Fapi_2Fideas_2F_5Bid_5D_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGaWRlYXMlMkYlNUJpZCU1RCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGaWRlYXMlMkYlNUJpZCU1RCUyRnJvdXRlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGaWRlYXMlMkYlNUJpZCU1RCUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGbm9vYiUyRkZvdW5kckNoZWNrJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRmlkZWFzJTJGJTVCaWQlNUQlMkZyb3V0ZSZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCE_3D_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap","getAuth","adapter","D1Adapter","user","session","key","Lucia","sessionCookie","name","SESSION_COOKIE_NAME","attributes","secure","httpOnly","sameSite","path","getUserAttributes","email","data","createUser","hashedPassword","uuidv4","auth","userId","providerId","providerUserId","password","run","verifyEmailPassword","keyId","hashed_password","user_id","req","sessionId","getCookie","cookie","headers","get","part","split","k","v","trim","decodeURIComponent","now","Math","floor","Date","exp","Number","expires_at","isFinite","getRequestContext"],"sourceRoot":""}