{"version":3,"file":"app/api/auth/[...lucia]/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/api/auth/[...lucia]/route.ts","webpack://_N_E/./app/api/auth/[...lucia]/route.ts?26d6","webpack://_N_E/?a748","webpack://_N_E/./lib/auth.ts","webpack://_N_E/./lib/env.ts"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { env as getEnv } from \"@/lib/env\";\nimport { getAuth, createUser, verifyEmailPassword, getSessionUserId } from \"@/lib/auth\";\n\nexport const runtime = \"edge\";\n\nasync function hashPassword(pw: string) {\n  const data = new TextEncoder().encode(pw);\n  const digest = await crypto.subtle.digest(\"SHA-256\", data);\n  const bytes = Array.from(new Uint8Array(digest));\n  return bytes.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\nexport async function POST(req: Request) {\n  const env = getEnv();\n  const url = new URL(req.url);\n  const action = url.pathname.split(\"/\").pop();\n  const auth = getAuth(env);\n\n  if (action === \"register\") {\n    const body = (await req.json()) as any;\n    const email = body?.email as string | undefined;\n    const password = body?.password as string | undefined;\n    if (!email || !password) return new Response(\"Bad request\", { status: 400 });\n    const hashed = await hashPassword(password);\n    const userId = await createUser(env, email, hashed);\n    const session = await auth.createSession(userId, {});\n    const cookie = auth.createSessionCookie(session.id);\n    return new Response(JSON.stringify({ userId }), {\n      status: 201,\n      headers: { \"Set-Cookie\": cookie.serialize() },\n    });\n  }\n\n  if (action === \"login\") {\n    const body = (await req.json()) as any;\n    const email = body?.email as string | undefined;\n    const password = body?.password as string | undefined;\n    if (!email || !password) return new Response(\"Bad request\", { status: 400 });\n    const hashed = await hashPassword(password);\n    const userId = await verifyEmailPassword(env, email, hashed);\n    if (!userId) return new Response(\"Invalid credentials\", { status: 401 });\n    const session = await auth.createSession(userId, {});\n    const cookie = auth.createSessionCookie(session.id);\n    return new Response(JSON.stringify({ ok: true }), {\n      headers: { \"Set-Cookie\": cookie.serialize() },\n    });\n  }\n\n  if (action === \"logout\") {\n    const env = getEnv();\n    const userId = await getSessionUserId(env, req);\n    // best-effort session invalidation: delete by cookie id if present\n    const cookie = req.headers.get(\"cookie\") || \"\";\n    const match = cookie.match(/fc_session=([^;]+)/);\n    const sessionId = match ? decodeURIComponent(match[1]) : null;\n    if (sessionId) await env.DB.prepare(`DELETE FROM sessions WHERE id = ?`).bind(sessionId).run();\n    const blank = auth.createBlankSessionCookie();\n    return new Response(\"\", { headers: { \"Set-Cookie\": blank.serialize() } });\n  }\n\n  return new Response(\"Not found\", { status: 404 });\n}\n\n\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/home/noob/FoundrCheck/app/api/auth/[...lucia]/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/auth/[...lucia]/route\",\n        pathname: \"/api/auth/[...lucia]\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/[...lucia]/route\"\n    },\n    resolvedPagePath: \"/home/noob/FoundrCheck/app/api/auth/[...lucia]/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/[...lucia]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fauth%2F%5B...lucia%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...lucia%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...lucia%5D%2Froute.ts&appDir=%2Fhome%2Fnoob%2FFoundrCheck%2Fapp&appPaths=%2Fapi%2Fauth%2F%5B...lucia%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/auth/[...lucia]/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","import { Lucia } from \"lucia\";\nimport { D1Adapter } from \"@lucia-auth/adapter-sqlite\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ntype Bindings = {\n  DB: D1Database;\n};\n\nexport function getAuth(env: Bindings) {\n  const adapter = new D1Adapter(env.DB, {\n    user: \"users\",\n    session: \"sessions\",\n    key: \"user_keys\",\n  });\n  const auth = new Lucia(adapter, {\n    sessionCookie: {\n      name: SESSION_COOKIE_NAME,\n      attributes: { secure: true, httpOnly: true, sameSite: \"lax\", path: \"/\" },\n    },\n    getUserAttributes: (data) => ({ email: (data as any).email }),\n  });\n  return auth;\n}\n\nexport async function createUser(env: Bindings, email: string, hashedPassword: string) {\n  const id = uuidv4();\n  const auth = getAuth(env);\n  await auth.createUser({\n    userId: id,\n    key: {\n      providerId: \"email\",\n      providerUserId: email,\n      password: hashedPassword,\n    },\n    attributes: { email },\n  });\n  // minimal profile row\n  await env.DB.prepare(\"INSERT OR IGNORE INTO user_profiles (id, email) VALUES (?, ?)\").bind(id, email).run();\n  return id;\n}\n\nexport async function verifyEmailPassword(env: Bindings, email: string, hashedPassword: string): Promise<string | null> {\n  const keyId = `email:${email}`;\n  const res = await env.DB.prepare(\n    `SELECT user_id, hashed_password FROM user_keys WHERE id = ?`\n  ).bind(keyId).all();\n  const row = res.results?.[0] as any;\n  if (!row) return null;\n  if (row.hashed_password !== hashedPassword) return null;\n  return row.user_id as string;\n}\n\nexport const SESSION_COOKIE_NAME = \"fc_session\";\n\nexport function getCookie(req: Request, name: string): string | null {\n  const cookie = req.headers.get(\"cookie\");\n  if (!cookie) return null;\n  const parts = cookie.split(\";\");\n  for (const part of parts) {\n    const [k, v] = part.trim().split(\"=\");\n    if (k === name) return decodeURIComponent(v ?? \"\");\n  }\n  return null;\n}\n\nexport async function getSessionUserId(env: Bindings, req: Request): Promise<string | null> {\n  const sessionId = getCookie(req, SESSION_COOKIE_NAME);\n  if (!sessionId) return null;\n  const res = await env.DB.prepare(`SELECT user_id, expires_at FROM sessions WHERE id = ?`).bind(sessionId).all();\n  const row = res.results?.[0] as any;\n  if (!row) return null;\n  const now = Math.floor(Date.now() / 1000);\n  const exp = Number(row.expires_at);\n  if (Number.isFinite(exp) && exp < now) return null;\n  return row.user_id as string;\n}\n\n\n","import { getRequestContext } from \"@cloudflare/next-on-pages\";\n\nexport type Bindings = {\n  DB: D1Database;\n  IDEA_QUEUE: Queue;\n  PERPLEXITY_API_KEY: string;\n  PERPLEXITY_MODEL: string;\n  APP_TIMEZONE?: string;\n  RATE_LIMIT_DAILY?: string | number;\n  TURNSTILE_SECRET_KEY?: string;\n  NEXT_PUBLIC_TURNSTILE_SITE_KEY?: string;\n};\n\nexport function env(): Bindings {\n  return getRequestContext().env as unknown as Bindings;\n}\n\n\n"],"names":["module","exports","require","runtime","hashPassword","pw","data","TextEncoder","encode","bytes","from","Uint8Array","crypto","subtle","digest","map","b","toString","padStart","join","POST","req","env","getEnv","action","url","URL","pathname","split","pop","auth","getAuth","body","json","email","password","Response","status","hashed","userId","createUser","session","createSession","cookie","createSessionCookie","id","JSON","stringify","headers","serialize","verifyEmailPassword","ok","getSessionUserId","match","get","sessionId","decodeURIComponent","DB","prepare","bind","run","blank","createBlankSessionCookie","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fauth_2F_5B_lucia_5D_2Froute_ts_page_2Fapi_2Fauth_2F_5B_lucia_5D_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGYXV0aCUyRiU1Qi4uLmx1Y2lhJTVEJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhdXRoJTJGJTVCLi4ubHVjaWElNUQlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkYlNUIuLi5sdWNpYSU1RCUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGbm9vYiUyRkZvdW5kckNoZWNrJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRmF1dGglMkYlNUIuLi5sdWNpYSU1RCUyRnJvdXRlJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEIQ_3D_3D_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap","adapter","D1Adapter","user","key","Lucia","sessionCookie","name","SESSION_COOKIE_NAME","attributes","secure","httpOnly","sameSite","path","getUserAttributes","hashedPassword","uuidv4","providerId","providerUserId","keyId","res","all","row","results","hashed_password","user_id","getCookie","part","k","v","trim","now","Math","floor","Date","exp","Number","expires_at","isFinite","getRequestContext"],"sourceRoot":""}